import React, { useEffect, useState, Suspense } from 'react';
import { useNavigate } from 'react-router-dom';
import { useNewPlayer } from '../context/NewPlayerContext';
import { useTranslation } from 'react-i18next';
import axios from 'axios';

const API_URL = process.env.NODE_ENV === 'production'
  ? 'https://cosmoclick-backend.onrender.com'
  : 'http://localhost:5000';

const StartPage: React.FC = () => {
  const { player, loading, error, setError, fetchInitialData, setPlayer } = useNewPlayer();
  const navigate = useNavigate();
  const { t, i18n } = useTranslation();
  const [minDelayElapsed, setMinDelayElapsed] = useState(false);
  const [progress, setProgress] = useState(0);
  const [showLanguageModal, setShowLanguageModal] = useState(false);
  const [showWelcomeModal, setShowWelcomeModal] = useState(false);
  const [selectedLanguage, setSelectedLanguage] = useState<string | null>(null);
  const [timeoutElapsed, setTimeoutElapsed] = useState(false);
  const [isInitialized, setIsInitialized] = useState(false);
  const [hasNavigated, setHasNavigated] = useState(false);
  const [dataLoaded, setDataLoaded] = useState(false);
  const [isNewPlayer, setIsNewPlayer] = useState(false);

  // üî• –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º StartPage –º–∏–Ω–∏–º—É–º 4 —Å–µ–∫—É–Ω–¥—ã
  useEffect(() => {
    console.log('üé¨ StartPage: –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–æ–≤');
    const minDelayTimer = setTimeout(() => {
      console.log('‚è∞ StartPage: –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 4 —Å–µ–∫ –ø—Ä–æ—à–ª–∞');
      setMinDelayElapsed(true);
    }, 4000);
    
    const timeoutTimer = setTimeout(() => {
      console.log('‚è∞ StartPage: –¢–∞–π–º-–∞—É—Ç 15 —Å–µ–∫ –ø—Ä–æ—à–µ–ª');
      setTimeoutElapsed(true);
    }, 15000);
    
    const progressInterval = setInterval(() => {
      setProgress((prev) => {
        if (prev < 90) {
          return prev + 3;
        } else if (dataLoaded && prev < 100) {
          return prev + 10;
        }
        return prev;
      });
    }, 150);

    return () => {
      clearTimeout(minDelayTimer);
      clearTimeout(timeoutTimer);
      clearInterval(progressInterval);
    };
  }, [dataLoaded]);

  // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  useEffect(() => {
    if (error) {
      const errorTimer = setTimeout(() => {
        setError(null);
      }, 3000);
      return () => clearTimeout(errorTimer);
    }
  }, [error, setError]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (!isInitialized) {
      console.log('üöÄ StartPage: –ó–∞–ø—É—Å–∫ fetchInitialData');
      fetchInitialData();
      setIsInitialized(true);
    }
  }, [fetchInitialData, isInitialized]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
useEffect(() => {
  if (player && !loading) {
    console.log('üì¶ StartPage: –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', {
      hasLanguage: !!player.language,
      telegramId: player.telegram_id,
      username: player.username,
      first_name: player.first_name
    });
    setDataLoaded(true);
    
    const isPlayerNew = !player.language;
    setIsNewPlayer(isPlayerNew);

    // üî• –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—ã
    if (isPlayerNew && player.telegram_id) {
      const initData = (window as any).Telegram?.WebApp?.initData;  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û
      const referrerIdFromURL = initData ? new URLSearchParams(initData).get('start') : null;

      axios.post(`${API_URL}/api/referrals/register`, {
        telegramId: player.telegram_id,
        referrerId: referrerIdFromURL || undefined
      }).then(() => {
        console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
      }).catch(err => {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:', err);
      });
    }

    if (player.language && i18n.language !== player.language && !isPlayerNew) {
      i18n.changeLanguage(player.language);
    }
  }
}, [player, loading, i18n]);

  // –õ–æ–≥–∏–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –≤—Å–µ–≥–¥–∞ –∂–¥–µ–º –º–∏–Ω–∏–º—É–º 4 —Å–µ–∫—É–Ω–¥—ã
  useEffect(() => {
    if (hasNavigated) return;

    // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —è–∑—ã–∫ –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù
    if (player && !player.language && !loading && !error && !showLanguageModal && !showWelcomeModal) {
      console.log('üåê StartPage: –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ - —è–∑—ã–∫ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      setShowLanguageModal(true);
      return;
    }

    const allDataLoaded = !!(player && dataLoaded);
    const canNavigate = minDelayElapsed && allDataLoaded && progress >= 100;
    
    console.log('üîç StartPage: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –ø–µ—Ä–µ—Ö–æ–¥–∞:', { 
      minDelayElapsed, 
      loading, 
      allDataLoaded, 
      dataLoaded,
      timeoutElapsed, 
      error, 
      hasNavigated,
      progress,
      canNavigate,
      hasLanguage: !!player?.language,
      isNewPlayer
    });

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é –ø–æ—Å–ª–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    if (canNavigate && !showLanguageModal && !showWelcomeModal) {
      console.log('‚úÖ StartPage: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é - –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      setHasNavigated(true);
      navigate('/', { replace: true });
    } else if (timeoutElapsed && !error && !showLanguageModal && !showWelcomeModal) {
      console.log('‚è∞ StartPage: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é - —Ç–∞–π–º-–∞—É—Ç');
      setHasNavigated(true);
      navigate('/', { replace: true });
    }
  }, [player, loading, error, minDelayElapsed, timeoutElapsed, navigate, i18n, hasNavigated, dataLoaded, progress, showLanguageModal, showWelcomeModal, isNewPlayer]);

  const handleLanguageSelect = async (lang: string) => {
    try {
      const telegramId = player?.telegram_id;
      if (!telegramId) {
        console.error('‚ùå StartPage: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegramId');
        return;
      }
      console.log(`üåê StartPage: –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ${lang}, telegramId: ${telegramId}`);
      
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ —á—Ç–æ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ *
      const response = await axios.post(`${API_URL}/api/player/language`, { 
        telegramId, 
        language: lang,
        isFirstLanguageSelection: true // üî• –ù–û–í–´–ô –§–õ–ê–ì
      });
      console.log('‚úÖ StartPage: –û—Ç–≤–µ—Ç –æ—Ç API:', response.data);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —è–∑—ã–∫ –ª–æ–∫–∞–ª—å–Ω–æ –ë–ï–ó –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
      await i18n.changeLanguage(lang);
      setSelectedLanguage(lang);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ
      if (player) {
        setPlayer({ ...player, language: lang, registration_language: lang });
      }
      
      setShowLanguageModal(false);
      
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ–∫–∞–∑–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
      setTimeout(() => {
        setShowWelcomeModal(true);
      }, 500); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Å–º–µ–Ω—É —è–∑—ã–∫–∞
      
    } catch (err) {
      console.error('‚ùå StartPage: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫:', err);
      setShowLanguageModal(false);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫');
    }
  };
  
  const handleWelcomeClose = () => {
    setShowWelcomeModal(false);
    setIsNewPlayer(false); // üî• –ü–û–ú–ï–ß–ê–ï–ú –ß–¢–û –£–ñ–ï –ù–ï –ù–û–í–´–ô –ò–ì–†–û–ö!
  };

  const colorStyle = player?.color || '#00f0ff';

  return (
    <Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>}>
      <div
        style={{
          backgroundImage: `url(/assets/startpage_bg.png)`,
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          backgroundRepeat: 'no-repeat',
          height: '100vh',
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'flex-start',
          alignItems: 'center',
          color: '#fff',
          padding: '20px',
          position: 'relative',
        }}
      >
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
        <h1
          style={{
            fontSize: '2rem',
            color: 'white',
            textShadow: `0 0 10px ${colorStyle}, 0 0 20px ${colorStyle}`,
            textAlign: 'center',
            whiteSpace: 'pre-line',
            position: 'absolute',
            top: '20px',
            opacity: dataLoaded ? 1 : 0.7,
            transition: 'opacity 0.5s ease'
          }}
        >
          {player && player.language ? 
            t('welcome_player', { username: player.first_name || player.username || `User${player.telegram_id?.slice(-4) || 'Unknown'}` }) :
            'CosmoClick Loading...'
          }
        </h1>
        
        {error && (
          <p
            style={{
              fontSize: '1.2rem',
              color: '#ff4d4d',
              textShadow: '0 0 10px #ff4d4d',
              marginTop: '200px',
            }}
          >
            {error}
          </p>
        )}
        
        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
        <div
          style={{
            width: '80%',
            maxWidth: '600px',
            position: 'absolute',
            bottom: '20px',
          }}
        >
          <div
            style={{
              width: '100%',
              background: 'rgba(255, 255, 255, 0.2)',
              borderRadius: '5px',
              overflow: 'hidden',
            }}
          >
            <div
              style={{
                width: `${Math.min(progress, 100)}%`,
                height: '20px',
                background: colorStyle,
                boxShadow: `0 0 10px ${colorStyle}`,
                transition: 'width 0.3s ease',
              }}
            />
          </div>
          <p style={{ textAlign: 'center', marginTop: '10px' }}>
            {dataLoaded ? 
              t('loading_complete') || '–ì–æ—Ç–æ–≤–æ!' : 
              t('loading') || '–ó–∞–≥—Ä—É–∑–∫–∞...'
            } {Math.round(Math.min(progress, 100))}%
          </p>
        </div>

        {/* üåê –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –í–´–ë–û–†–ê –Ø–ó–´–ö–ê - –£–õ–£–ß–®–ï–ù–ù–´–ô –î–ò–ó–ê–ô–ù */}
        {showLanguageModal && (
          <div
            style={{
              position: 'fixed',
              top: '0',
              left: '0',
              width: '100%',
              height: '100%',
              background: 'rgba(0, 0, 0, 0.8)',
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              zIndex: 1000,
            }}
          >
            <div
              style={{
                background: 'rgba(0, 0, 20, 0.95)',
                padding: '30px',
                borderRadius: '20px',
                textAlign: 'center',
                boxShadow: `0 0 30px ${colorStyle}`,
                border: `2px solid ${colorStyle}`,
                maxWidth: '350px', // üî• –£–ú–ï–ù–¨–®–ò–õ–ò –®–ò–†–ò–ù–£
                width: '90%', // üî• –ê–î–ê–ü–¢–ò–í–ù–ê–Ø –®–ò–†–ò–ù–ê
                margin: '20px'
              }}
            >
              <h2 style={{ 
                color: colorStyle, 
                marginBottom: '25px', 
                fontSize: '20px',
                lineHeight: '1.3'
              }}>
                üåê Choose Language<br/>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫
              </h2>
              
              {/* üî• –£–õ–£–ß–®–ï–ù–ù–ê–Ø –°–ï–¢–ö–ê 2x4 */}
              <div style={{ 
                display: 'grid', 
                gridTemplateColumns: 'repeat(2, 1fr)', // 2 –ö–û–õ–û–ù–ö–ò
                gap: '12px', 
                justifyContent: 'center',
                maxWidth: '280px',
                margin: '0 auto'
              }}>
                {[
                  { code: 'en', flag: 'üá∫üá∏', name: 'English' },
                  { code: 'ru', flag: 'üá∑üá∫', name: '–†—É—Å—Å–∫–∏–π' },
                  { code: 'es', flag: 'üá™üá∏', name: 'Espa√±ol' },
                  { code: 'fr', flag: 'üá´üá∑', name: 'Fran√ßais' },
                  { code: 'de', flag: 'üá©üá™', name: 'Deutsch' },
                  { code: 'zh', flag: 'üá®üá≥', name: '‰∏≠Êñá' },
                  { code: 'ja', flag: 'üáØüáµ', name: 'Êó•Êú¨Ë™û' }
                ].map((lang) => (
                  <button
                    key={lang.code}
                    onClick={() => handleLanguageSelect(lang.code)}
                    style={{
                      padding: '12px 8px', // üî• –£–ú–ï–ù–¨–®–ò–õ–ò –û–¢–°–¢–£–ü–´
                      background: 'transparent',
                      border: `2px solid ${colorStyle}`,
                      borderRadius: '10px',
                      color: '#fff',
                      cursor: 'pointer',
                      fontSize: '14px', // üî• –£–ú–ï–ù–¨–®–ò–õ–ò –®–†–ò–§–¢
                      transition: 'all 0.3s ease',
                      display: 'flex',
                      flexDirection: 'column',
                      alignItems: 'center',
                      gap: '4px', // üî• –£–ú–ï–ù–¨–®–ò–õ–ò –û–¢–°–¢–£–ü
                      minHeight: '70px' // üî• –§–ò–ö–°–ò–†–û–í–ê–ù–ù–ê–Ø –í–´–°–û–¢–ê
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.background = colorStyle;
                      e.currentTarget.style.transform = 'scale(1.05)';
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.background = 'transparent';
                      e.currentTarget.style.transform = 'scale(1)';
                    }}
                  >
                    <span style={{ fontSize: '20px' }}>{lang.flag}</span>
                    <span style={{ 
                      fontSize: '12px', 
                      textAlign: 'center',
                      lineHeight: '1.2'
                    }}>{lang.name}</span>
                  </button>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* üéÆ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø */}
        {showWelcomeModal && (
          <div
            style={{
              position: 'fixed',
              top: '0',
              left: '0',
              width: '100%',
              height: '100%',
              background: 'rgba(0, 0, 0, 0.9)',
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              zIndex: 1000,
              padding: '20px'
            }}
          >
            <div
              style={{
                background: 'rgba(0, 0, 40, 0.95)',
                padding: '30px',
                borderRadius: '20px',
                textAlign: 'center',
                boxShadow: `0 0 30px ${colorStyle}`,
                border: `3px solid ${colorStyle}`,
                maxWidth: '500px',
                width: '90%',
                maxHeight: '80vh',
                overflowY: 'auto'
              }}
            >
              <h2 style={{ color: colorStyle, marginBottom: '20px', fontSize: '24px' }}>
                üöÄ {t('welcome_to_cosmoclick') || '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CosmoClick!'}
              </h2>
              
              <div style={{ textAlign: 'left', lineHeight: '1.6', fontSize: '16px', marginBottom: '25px' }}>
                <p style={{ marginBottom: '15px' }}>
                  üåü <strong>{t('game_description') || 'CosmoClick - —ç—Ç–æ –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞-–∫–ª–∏–∫–µ—Ä, –≥–¥–µ –≤—ã:'}</strong>
                </p>
                
                <ul style={{ paddingLeft: '20px', marginBottom: '15px' }}>
                  <li style={{ marginBottom: '8px' }}>
                    ü™® {t('buy_asteroids') || '–ü–æ–∫—É–ø–∞–µ—Ç–µ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã –¥–ª—è –¥–æ–±—ã—á–∏ —Ä–µ—Å—É—Ä—Å–æ–≤'}
                  </li>
                  <li style={{ marginBottom: '8px' }}>
                    ü§ñ {t('buy_drones') || '–ü–æ–∫—É–ø–∞–µ—Ç–µ –¥—Ä–æ–Ω–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–æ–±—ã—á–∏'}
                  </li>
                  <li style={{ marginBottom: '8px' }}>
                    üì¶ {t('buy_cargo') || '–£–ª—É—á—à–∞–µ—Ç–µ –∫–∞—Ä–≥–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤'}
                  </li>
                  <li style={{ marginBottom: '8px' }}>
                    üåå {t('unlock_systems') || '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –Ω–æ–≤—ã–µ –∑–≤–µ–∑–¥–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã'}
                  </li>
                  <li style={{ marginBottom: '8px' }}>
                    üíé {t('stake_ton') || '–°—Ç–µ–π–∫–∞–µ—Ç–µ TON –≤ —Å–∏—Å—Ç–µ–º–µ 5 –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏'}
                  </li>
                </ul>
                
                <p style={{ marginBottom: '15px' }}>
                  üí∞ <strong>{t('currencies') || '–í–∞–ª—é—Ç—ã:'}:</strong>
                </p>
                
                <ul style={{ paddingLeft: '20px', marginBottom: '15px' }}>
                  <li>üî∏ <strong>CCC</strong> - {t('ccc_description') || '–æ—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º 1-3'}</li>
                  <li>üîπ <strong>CS</strong> - {t('cs_description') || '–ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≤–∞–ª—é—Ç–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã 4'}</li>
                  <li>üíé <strong>TON</strong> - {t('ton_description') || '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –¥–ª—è —Å—Ç–µ–π–∫–∏–Ω–≥–∞ –≤ —Å–∏—Å—Ç–µ–º–µ 5'}</li>
                </ul>
                
                <p style={{ textAlign: 'center', color: colorStyle, fontWeight: 'bold' }}>
                  {t('start_journey') || '–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–µ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!'}
                </p>
              </div>
              
              <button
                onClick={handleWelcomeClose}
                style={{
                  padding: '15px 30px',
                  background: colorStyle,
                  border: 'none',
                  borderRadius: '10px',
                  color: '#000',
                  cursor: 'pointer',
                  fontSize: '18px',
                  fontWeight: 'bold',
                  transition: 'all 0.3s ease'
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'scale(1.05)';
                  e.currentTarget.style.boxShadow = `0 0 20px ${colorStyle}`;
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'scale(1)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                üöÄ {t('start_game') || '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É!'}
              </button>
            </div>
          </div>
        )}
      </div>
    </Suspense>
  );
};

export default StartPage;