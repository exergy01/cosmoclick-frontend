import React, { useEffect, useState, useCallback } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useNewPlayer } from '../context/NewPlayerContext';
import { useGame } from '../context/GameContext';
import { useShop } from '../context/ShopContext';
import { useTranslation } from 'react-i18next';
import axios from 'axios';
import CurrencyPanel from '../components/CurrencyPanel';
import NavigationMenu from '../components/NavigationMenu';
import SystemUnlockModal from '../components/SystemUnlockModal';
import ToastNotification from '../components/ToastNotification';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Å—á–µ—Ç—á–∏–∫
import { useCleanCounter } from '../hooks/useCleanCounter';

interface Item {
  id: number;
  system: number;
  price?: number;
  cccPerDay?: number;
  csPerDay?: number;
  totalCcc?: number;
  totalCs?: number;
  capacity?: number;
  name?: string;
  isPurchased?: boolean;
  isPreviousPurchased?: boolean;
  currency?: string;
  isBomb?: boolean;
}

interface ShopButton {
  type: string;
  count: string;
  amount?: string;
}

interface Toast {
  id: number;
  message: string;
  type: 'success' | 'error' | 'warning';
  duration?: number;
}

const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002';
const ShopPage: React.FC = () => {
  const { t } = useTranslation();
  const { player } = useNewPlayer();
  const { 
    currentSystem, 
    setCurrentSystem,
    totalPerHour,
    asteroidTotal,
    remaining
  } = useGame();
  
  const {
    buyAsteroid,
    buyDrone,
    buyCargo,
    loading,
    error,
  } = useShop();

  // –ù–æ–≤—ã–π —á–∏—Å—Ç—ã–π —Å—á–µ—Ç—á–∏–∫
  const {
    resetCleanCounter,
    resetForNewAsteroid,
    hasFullSetup,
  } = useCleanCounter({ player, currentSystem });

  const navigate = useNavigate();
  const location = useLocation();
  const [activeTab, setActiveTab] = useState<string>('asteroid');
  const [shopItems, setShopItems] = useState<{ asteroids: Item[]; drones: Item[]; cargo: Item[] }>({
    asteroids: [],
    drones: [],
    cargo: [],
  });
  const [isLoading, setIsLoading] = useState(false);
  
  // üî• –ù–û–í–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã
  const [showSystemDropdown, setShowSystemDropdown] = useState(false);
  const [showUnlockModal, setShowUnlockModal] = useState(false);
  const [targetSystem, setTargetSystem] = useState<number | null>(null);

  // üéâ TOAST –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
  const [toasts, setToasts] = useState<Toast[]>([]);
  const [toastCounter, setToastCounter] = useState(0);

  // üî• –ù–û–í–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
  const [shopButtons, setShopButtons] = useState<ShopButton[]>([]);
  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è toast
  const addToast = (message: string, type: 'success' | 'error' | 'warning') => {
    const newToast: Toast = {
      id: toastCounter,
      message,
      type
    };
    setToasts(prev => [...prev, newToast]);
    setToastCounter(prev => prev + 1);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      setToasts(prev => prev.filter(toast => toast.id !== newToast.id));
    }, 4000);
  };

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –∏–∑ location state
  useEffect(() => {
    const stateTab = (location.state as { tab?: string })?.tab;
    if (stateTab) setActiveTab(stateTab);
  }, [location.state]);

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –¥–ª—è —Å–º–µ–Ω—ã —Å–∏—Å—Ç–µ–º—ã (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∏—Å—Ç–µ–º—ã 5)
  const handleSystemChange = (systemId: number) => {
    if (!player) return;
    
    // üöÄ –°–ò–°–¢–ï–ú–ê 5: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (systemId === 5) {
      if (player.unlocked_systems?.includes(5)) {
        // –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ 5 —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å —Å–∏—Å—Ç–µ–º–æ–π 5
        setCurrentSystem(5);
        navigate('/main');
      } else {
        // –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ 5 –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        setTargetSystem(5);
        setShowUnlockModal(true);
        setShowSystemDropdown(false);
      }
      return;
    }
    
    // üõí –°–ò–°–¢–ï–ú–´ 1-4: –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞
    if (player.unlocked_systems?.includes(systemId)) {
      setCurrentSystem(systemId);
      setShowSystemDropdown(false);
    } else {
      setTargetSystem(systemId);
      setShowUnlockModal(true);
      setShowSystemDropdown(false);
    }
  };

  const handleUnlockSuccess = () => {
    setShowUnlockModal(false);
    if (targetSystem) {
      // üöÄ –ï—Å–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —Å–∏—Å—Ç–µ–º—É 5 - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      if (targetSystem === 5) {
        setCurrentSystem(5);
        navigate('/main');
      } else {
        // –î–ª—è —Å–∏—Å—Ç–µ–º 1-4 –æ—Å—Ç–∞–µ–º—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ
        setCurrentSystem(targetSystem);
      }
      setTargetSystem(null);
    }
  };

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è TypeScript
  const handleUnlockCancel = () => {
    setShowUnlockModal(false);
    setTargetSystem(null);
    if (player?.unlocked_systems && player.unlocked_systems.length > 0) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ (–Ω–æ –Ω–µ –∫ —Å–∏—Å—Ç–µ–º–µ 5 –≤ –º–∞–≥–∞–∑–∏–Ω–µ)
      const availableSystems = player.unlocked_systems.filter((sys: number) => sys <= 4);
      if (availableSystems.length > 0) {
        setCurrentSystem(Math.max(...availableSystems));
      } else {
        setCurrentSystem(1);
      }
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const getItemName = (type: string, id: number, system: number): string => {
    const key = `shop_${type}_${system}_${id}`;
    const translated = t(key);
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    if (translated === key) {
      switch(type) {
        case 'asteroid':
          return `${t('asteroid')} #${id}`;
        case 'drone':
          return `${t('drones')} #${id}`;
        case 'cargo':
          return `${t('cargo')} #${id}`;
        default:
          return `${type} #${id}`;
      }
    }
    
    return translated;
  };
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–æ–º–±—ã
  const getResourceValue = (item: Item): number => {
    // üí£ –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –ë–û–ú–ë–´
    const isBomb = item.id === 13 || item.isBomb;
    
    if (isBomb) {
      // –î–ª—è –±–æ–º–±—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É–º–º—É –í–°–ï–• –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∏–∑ shopData
      const systemAsteroids = shopItems.asteroids.filter(a => 
        a.system === currentSystem && a.id <= 12 && !a.isBomb
      );
      
      console.log(`üí£ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –±–æ–º–±—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã ${currentSystem}:`, systemAsteroids);
      
      const totalResources = systemAsteroids.reduce((sum, asteroid) => {
        if (currentSystem === 4) {
          return sum + (asteroid.totalCs || 0);
        } else {
          return sum + (asteroid.totalCcc || 0);
        }
      }, 0);
      
      console.log(`üí£ –û–±—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã ${currentSystem}:`, totalResources);
      return totalResources;
    }
    
    // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞
    if (currentSystem === 4) {
      return item.totalCs || 0;
    } else {
      return item.totalCcc || 0;
    }
  };

  // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
  const getSystemAsteroidTotal = (): number => {
    if (!player) return 0;
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º asteroid_total_data
    if (player.asteroid_total_data && player.asteroid_total_data[currentSystem] !== undefined) {
      return player.asteroid_total_data[currentSystem];
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å—á–∏—Ç–∞–µ–º –∏–∑ –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤
    return player.asteroids
      .filter((a: any) => a.system === currentSystem)
      .reduce((sum: number, a: any) => {
        if (currentSystem === 4) {
          return sum + (a.totalCs || 0);
        } else {
          return sum + (a.totalCcc || 0);
        }
      }, 0);
  };

  // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  const getInitialAsteroidTotal = (): number => {
    if (!player) return 0;
    
    // –î–ª—è —Å–∏—Å—Ç–µ–º—ã 4 —Å—á–∏—Ç–∞–µ–º –∏–∑ shopData
    const systemAsteroids = shopItems.asteroids.filter(item => 
      player.asteroids.some((a: any) => a.id === item.id && a.system === currentSystem)
    );
    
    return systemAsteroids.reduce((sum, item) => {
      return sum + getResourceValue(item);
    }, 0);
  };

  // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥—Ä–æ–Ω–∞
  const getDroneProductivity = (item: Item): number => {
    if (currentSystem === 4) {
      return item.csPerDay || 0;
    } else {
      return item.cccPerDay || 0;
    }
  };

  // –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞
  const getResourceName = (): string => {
    return currentSystem === 4 ? 'CS' : 'CCC';
  };
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
  const fetchShopItems = useCallback(async () => {
    if (!player) return;
    
    try {
      const [asteroids, drones, cargo] = await Promise.all([
        axios.get(`${API_URL}/api/shop/asteroids`).then(res => res.data),
        axios.get(`${API_URL}/api/shop/drones`).then(res => res.data),
        axios.get(`${API_URL}/api/shop/cargo`).then(res => res.data)
      ]);
      
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –û–°–ù–û–í–ù–´–ï —Ç–æ–≤–∞—Ä—ã (–±–µ–∑ –±–æ–º–±—ã)
      const systemAsteroids = asteroids.filter((item: Item) => item.system === currentSystem && item.id <= 12);
      const systemDrones = drones.filter((item: Item) => item.system === currentSystem);
      const systemCargo = cargo.filter((item: Item) => item.system === currentSystem);
      
      const purchasedAsteroids = player.asteroids.filter((a: any) => a.system === currentSystem && a.id <= 12).length;
      const purchasedDrones = player.drones.filter((d: any) => d.system === currentSystem).length;
      const purchasedCargo = player.cargo_levels.filter((c: any) => c.system === currentSystem).length;
      
      console.log(`üîç –°–∏—Å—Ç–µ–º–∞ ${currentSystem} –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–æ–º–±—ã:`, {
        purchasedAsteroids, 
        purchasedDrones, 
        purchasedCargo,
        maxAsteroids: systemAsteroids.length,
        maxDrones: systemDrones.length, 
        maxCargo: systemCargo.length
      });
      
      // üî• –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
      const hasAllItems = purchasedAsteroids === systemAsteroids.length && 
                          purchasedDrones === systemDrones.length && 
                          purchasedCargo === systemCargo.length;
      
      console.log(`üí£ –ë–æ–º–±–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ ${currentSystem}:`, hasAllItems);
      
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–º–±—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—É–ø–ª–µ–Ω–æ –≤—Å–µ (–Ω–æ –æ–Ω–∞ –í–°–ï–ì–î–ê –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏)
      const availableAsteroids = asteroids
        .filter((item: Item) => {
          if (item.system !== currentSystem) return false;
          
          // –ï—Å–ª–∏ —ç—Ç–æ –±–æ–º–±–∞ (id=13), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—É–ø–ª–µ–Ω–æ –í–°–Å –æ—Å–Ω–æ–≤–Ω–æ–µ
          if (item.id === 13 || item.isBomb) {
            return hasAllItems;
          }
          
          // –û–±—ã—á–Ω—ã–µ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã (1-12) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ–≥–¥–∞
          return item.id <= 12;
        })
        .map((item: Item) => {
          const isBomb = item.id === 13 || item.isBomb;
          
          // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ß–µ—Ç–∫–æ —Ä–∞–∑–¥–µ–ª—è–µ–º –ª–æ–≥–∏–∫—É –¥–ª—è –±–æ–º–±—ã –∏ –æ–±—ã—á–Ω—ã—Ö –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤
          let isPurchased = false;
          if (isBomb) {
            // üí£ –ë–û–ú–ë–ê: –ù–ò–ö–û–ì–î–ê –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫—É–ø–ª–µ–Ω–Ω–æ–π (–≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞)
            isPurchased = false;
          } else {
            // üåç –û–ë–´–ß–ù–´–ï –ê–°–¢–ï–†–û–ò–î–´: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–∫—É–ø–∫–∏
            isPurchased = player?.asteroids.some((a: any) => a.id === item.id && a.system === item.system) || false;
          }
          
          let isPreviousPurchased = false;
          if (isBomb) {
            // üí£ –ë–û–ú–ë–ê –í–°–ï–ì–î–ê –¥–æ—Å—Ç—É–ø–Ω–∞ –µ—Å–ª–∏ –∫—É–ø–ª–µ–Ω–æ –≤—Å—ë –æ—Å–Ω–æ–≤–Ω–æ–µ
            isPreviousPurchased = hasAllItems;
          } else {
            // üåç –û–ë–´–ß–ù–´–ï –ê–°–¢–ï–†–û–ò–î–´: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            isPreviousPurchased = item.id === 1 || player?.asteroids.some((a: any) => a.id === item.id - 1 && a.system === item.system) || false;
          }
          
          return { ...item, isPurchased, isPreviousPurchased };
        });
      
      setShopItems({
        asteroids: availableAsteroids,
        drones: systemDrones.map((item: Item) => {
          const isPurchased = player?.drones.some((d: any) => d.id === item.id && d.system === item.system) || false;
          const isPreviousPurchased = item.id === 1 || player?.drones.some((d: any) => d.id === item.id - 1 && d.system === item.system) || false;
          return { ...item, isPurchased, isPreviousPurchased };
        }),
        cargo: systemCargo.map((item: Item) => ({
          ...item,
          isPurchased: player?.cargo_levels.some((c: any) => c.id === item.id && c.system === item.system) || false,
          isPreviousPurchased: item.id === 1 || player?.cargo_levels.some((c: any) => c.id === item.id - 1 && c.system === item.system) || false,
        })),
      });
    } catch (err) {
      console.error('Error fetching shop items:', err);
    }
  }, [player, currentSystem]);

  useEffect(() => {
    if (player) {
      fetchShopItems();
    }
  }, [fetchShopItems]);
  // üî• –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ —Å TON –±–æ–º–±–∞–º–∏
  const buyItem = async (type: string, id: number, price: number) => {
    if (!player?.telegram_id) {
      addToast(t('player_not_found'), 'error');
      return;
    }
    
    if (isLoading) return;
    
    // üî• –û–ë–ù–û–í–õ–ï–ù–û: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞–ª—é—Ç—É –¥–ª—è –±–æ–º–±—ã (—Ç–µ–ø–µ—Ä—å –≤—Å–µ –±–æ–º–±—ã –∑–∞ TON)
    let currencyToCheck = 'ccc'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    let currencyName = 'CCC';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –±–æ–º–±–∞?
    const isBomb = (type === 'asteroid' && id === 13);
    
    if (isBomb) {
      // üí£ –ë–û–ú–ë–ê: –¢–µ–ø–µ—Ä—å –í–°–ï –±–æ–º–±—ã –ø–æ–∫—É–ø–∞—é—Ç—Å—è –∑–∞ TON (–ø—Ä–æ–¥–∞–∫—à–Ω)
      currencyToCheck = 'ton';
      currencyName = 'TON';
    } else {
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤–∞–ª—é—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
      if (currentSystem >= 1 && currentSystem <= 4) {
        currencyToCheck = 'cs';
        currencyName = 'CS';
      } else if (currentSystem >= 5 && currentSystem <= 7) {
        currencyToCheck = 'ton';
        currencyName = 'TON';
      } else {
        currencyToCheck = 'ccc';
        currencyName = 'CCC';
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
    let currentBalance = 0;
    if (currencyToCheck === 'ton') {
      currentBalance = parseFloat(player.ton?.toString() || '0');
    } else if (currencyToCheck === 'cs') {
      currentBalance = parseFloat(player.cs?.toString() || '0');
    } else {
      currentBalance = parseFloat(player.ccc?.toString() || '0');
    }
    
    if (currentBalance < price) {
      const itemName = getItemName(type === 'drones' ? 'drone' : type, id, currentSystem);
      const shortfall = (price - currentBalance).toFixed(2);
      
      addToast(
        `${t('insufficient_funds')}! ${t('item_name')}: ${itemName}. ${t('price')}: ${price} ${currencyName}. ${t('not_enough')}: ${shortfall} ${currencyName}`,
        'error'
      );
      return;
    }
    
    setIsLoading(true);
    
    try {
      // –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
      if (type === 'asteroid') {
        // üî• –ü–ï–†–ï–î–ê–Å–ú currencyToCheck –¥–ª—è –±–æ–º–±—ã (—Ç–µ–ø–µ—Ä—å TON)
        await buyAsteroid(id, price, currentSystem, currencyToCheck);
        
        // üî• –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –¥–ª—è –±–æ–º–±—ã
        if (id === 13) {
          addToast('üí£ –õ–∏–º–∏—Ç—ã –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!', 'success');
        } else {
          resetForNewAsteroid(currentSystem);
        }
      } else if (type === 'drones') {
        await buyDrone(id, price, currentSystem);
        
        // üéâ –ü–†–û–í–ï–†–Ø–ï–ú –î–û–°–¢–ò–ñ–ï–ù–ò–ï 15 –î–†–û–ù–û–í (–î–õ–Ø –°–ò–°–¢–ï–ú 1-4)
        if (player.drones && currentSystem >= 1 && currentSystem <= 4) {
          const systemDrones = player.drones.filter((d: any) => d.system === currentSystem);
          const newDroneCount = systemDrones.length + 1; // +1 –∑–∞ —Ç–æ–ª—å–∫–æ —á—Ç–æ –∫—É–ø–ª–µ–Ω–Ω—ã–π
          
          if (newDroneCount === 15) {
            addToast(
              `üéâ ${t('achievement_15_drones')}! ${t('achievement_15_drones_desc')}`,
              'success'
            );
          }
        }
        
        resetCleanCounter(currentSystem);
      } else if (type === 'cargo') {
        const cargoItem = shopItems.cargo.find((item: Item) => item.id === id && item.system === currentSystem);
        if (!cargoItem?.capacity) throw new Error('Invalid cargo capacity');
        const capacityValue = typeof cargoItem.capacity === 'string' ? parseFloat(cargoItem.capacity) : cargoItem.capacity;
        await buyCargo(id, price, capacityValue, currentSystem);
        resetCleanCounter(currentSystem);
      }
      
      // üéâ –£–°–ü–ï–®–ù–ê–Ø –ü–û–ö–£–ü–ö–ê
      const itemName = getItemName(type === 'drones' ? 'drone' : type, id, currentSystem);
      if (!isBomb) {
        addToast(
          `‚úÖ ${t('purchase_successful')}! ${t('item_name')}: ${itemName}. ${t('spent')}: ${price} ${currencyName}`,
          'success'
        );
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞
      await fetchShopItems();
      
    } catch (err: any) {
      console.error(`Failed to buy ${type}:`, err);
      
      const itemName = getItemName(type === 'drones' ? 'drone' : type, id, currentSystem);
      
      if (err.response?.data?.error) {
        const serverError = err.response.data.error;
        
        if (serverError.includes('Insufficient funds') || serverError.includes('Not enough')) {
          addToast(`${t('insufficient_funds')} –¥–ª—è ${itemName}`, 'error');
        } else if (serverError.includes('already purchased')) {
          addToast(`${t('already_purchased')}: ${itemName}`, 'error');
        } else if (serverError.includes('Player not found')) {
          addToast(t('player_not_found'), 'error');
        } else {
          addToast(`${t('purchase_error')}: ${serverError}`, 'error');
        }
      } else if (err.message) {
        addToast(`${t('purchase_error')}: ${err.message}`, 'error');
      } else {
        addToast(t('unknown_error'), 'error');
      }
    } finally {
      setIsLoading(false);
    }
  };
  const getMaxItems = async (system: number, type: string): Promise<number> => {
    try {
      if (type === 'cargo') {
        const cargoData = await axios.get(`${API_URL}/api/shop/cargo`).then(res => res.data);
        return cargoData.filter((c: Item) => c.system === system).length;
      }
      if (type === 'asteroid') {
        const asteroidData = await axios.get(`${API_URL}/api/shop/asteroids`).then(res => res.data);
        return asteroidData.filter((a: Item) => a.system === system).length;
      }
      if (type === 'drones') {
        const droneData = await axios.get(`${API_URL}/api/shop/drones`).then(res => res.data);
        return droneData.filter((d: Item) => d.system === system).length;
      }
      return 0;
    } catch (err) {
      console.error(`Error fetching ${type} data:`, err);
      return 0;
    }
  };

  const fetchMaxItems = async () => {
    const maxAsteroids = await getMaxItems(currentSystem, 'asteroid');
    const maxDrones = await getMaxItems(currentSystem, 'drones');
    const maxCargo = await getMaxItems(currentSystem, 'cargo');
    return { maxAsteroids, maxDrones, maxCargo };
  };

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï: –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ (—Å—á–∏—Ç–∞–µ–º –¢–û–õ–¨–ö–û –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã)
  useEffect(() => {
    if (!player) return;
    
    fetchMaxItems().then(({ maxAsteroids, maxDrones, maxCargo }) => {
      const cargoInCurrentSystem = player.cargo_levels?.filter((c: any) => c.system === currentSystem) || [];
      let currentCargoLevel = 0;
      
      if (cargoInCurrentSystem.length > 0) {
        currentCargoLevel = Math.max(...cargoInCurrentSystem.map((c: any) => c.id));
      }
      
      const currentRemaining = getSystemAsteroidTotal();
      const initialTotal = getInitialAsteroidTotal();
      
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã (1-12)
      const mainAsteroidsCount = player.asteroids?.filter((a: any) => a.system === currentSystem && a.id <= 12).length || 0;
      const maxMainAsteroids = 12; // –≤—Å–µ–≥–¥–∞ 12 –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤
      
      setShopButtons([
        { 
          type: 'resources', 
          count: `${mainAsteroidsCount}/${maxMainAsteroids}`, 
          amount: `${currentRemaining.toFixed(1)} / ${initialTotal.toFixed(1)} ${getResourceName()}` 
        },
        { type: 'drones', count: `${player.drones?.filter((d: any) => d.system === currentSystem).length || 0}/${maxDrones}` },
        { type: 'cargo', count: `${currentCargoLevel}/${maxCargo}` },
      ]);
    });
  }, [player, currentSystem, shopItems.asteroids]);

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º (–≤–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º—É 5)
  const systemNames = [
    t('system_1_name'),
    t('system_2_name'),
    t('system_3_name'),
    t('system_4_name'),
    t('system_5_name')
  ];
  
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const systemName = t('system_display_format', {
    number: currentSystem,
    name: systemNames[currentSystem - 1]
  });
  
  const colorStyle = player?.color || '#00f0ff';

  if (!player) return <div>{t('loading')}</div>;
  return (
    <div style={{ 
      backgroundImage: `url(/assets/cosmo-bg-${currentSystem}.png)`, 
      backgroundSize: 'cover', 
      backgroundAttachment: 'fixed', 
      minHeight: '100vh', 
      color: '#fff', 
      display: 'flex', 
      flexDirection: 'column', 
      padding: '10px', 
      position: 'relative' 
    }}>
      {/* –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –≤–∞–ª—é—Ç–∞–º–∏ */}
      <CurrencyPanel 
        player={player}
        currentSystem={currentSystem}
        colorStyle={colorStyle}
      />

      <div style={{ marginTop: '150px', paddingBottom: '130px' }}>
        {/* –ö–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        <div style={{ display: 'flex', justifyContent: 'space-between', gap: '15px', marginBottom: '10px' }}>
          {shopButtons.map(({ type, count, amount }) => (
            <button
              key={type}
              onClick={() => setActiveTab(type === 'resources' ? 'asteroid' : type)}
              style={{
                flex: 1,
                padding: '8px 5px',
                background: activeTab === (type === 'resources' ? 'asteroid' : type) 
                  ? `rgba(0, 240, 255, 0.2)` 
                  : 'rgba(0, 0, 0, 0.5)',
                border: activeTab === (type === 'resources' ? 'asteroid' : type) 
                  ? `4px solid ${colorStyle}` 
                  : `2px solid ${colorStyle}`,
                borderRadius: '15px',
                boxShadow: activeTab === (type === 'resources' ? 'asteroid' : type) 
                  ? `0 0 20px ${colorStyle}, inset 0 0 15px ${colorStyle}, inset 0 0 25px rgba(0, 240, 255, 0.3)` 
                  : `0 0 10px ${colorStyle}`,
                color: activeTab === (type === 'resources' ? 'asteroid' : type) ? colorStyle : '#fff',
                fontSize: '1rem',
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'center',
                alignItems: 'center',
                gap: '5px',
                cursor: 'pointer',
                transition: 'all 0.3s ease',
                boxSizing: 'border-box',
                height: 'auto',
                textShadow: activeTab === (type === 'resources' ? 'asteroid' : type) ? `0 0 10px ${colorStyle}` : 'none'
              }}
              onMouseEnter={e => {
                e.currentTarget.style.transform = 'scale(1.05)';
              }}
              onMouseLeave={e => {
                e.currentTarget.style.transform = 'scale(1)';
              }}
            >
              <span>{t(type)}</span>
              <span>{count}</span>
              {amount && <span>{amount}</span>}
            </button>
          ))}
        </div>

        {/* üî• –ë–õ–û–ö: –í—ã–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∏—Å—Ç–µ–º—ã 5) */}
        <div style={{ textAlign: 'center', margin: '10px 0', position: 'relative' }}>
          <span 
            onClick={() => { setShowSystemDropdown(!showSystemDropdown); }} 
            style={{ 
              fontSize: '1.5rem', 
              color: colorStyle, 
              textShadow: `0 0 10px ${colorStyle}`, 
              cursor: 'pointer', 
              transition: 'transform 0.3s ease', 
              display: 'inline-block' 
            }}
            onMouseEnter={e => (e.currentTarget.style.transform = 'scale(1.1)')} 
            onMouseLeave={e => (e.currentTarget.style.transform = 'scale(1)')}
          >
            üõí {systemName}
          </span>
          {showSystemDropdown && (
            <div style={{ 
              position: 'absolute', 
              top: '100%', 
              left: '50%', 
              transform: 'translateX(-50%)', 
              background: 'rgba(0, 0, 0, 0.7)', 
              border: `2px solid ${colorStyle}`, 
              borderRadius: '10px', 
              boxShadow: `0 0 10px ${colorStyle}`, 
              zIndex: 10 
            }}>
              {[1, 2, 3, 4, 5].map(i => {
                const isUnlocked = player.unlocked_systems?.includes(i);
                const systemData = {
                  1: { price: 0, currency: 'cs' },
                  2: { price: 150, currency: 'cs' },
                  3: { price: 300, currency: 'cs' },
                  4: { price: 500, currency: 'cs' },
                  5: { price: 15, currency: 'ton' }
                };
                const system = systemData[i as keyof typeof systemData];
                
                return (
                  <div 
                    key={i} 
                    onClick={() => handleSystemChange(i)}
                    style={{ 
                      padding: '10px 20px', 
                      color: isUnlocked ? '#fff' : '#888', 
                      cursor: 'pointer', 
                      textAlign: 'center', 
                      transition: 'background 0.3s ease',
                      borderLeft: isUnlocked ? `4px solid ${colorStyle}` : '4px solid transparent'
                    }}
                    onMouseEnter={e => (e.currentTarget.style.background = 'rgba(0, 240, 255, 0.2)')} 
                    onMouseLeave={e => (e.currentTarget.style.background = 'transparent')}
                  >
                    {t('system_display_format', { number: i, name: systemNames[i-1] })}
                    {!isUnlocked && (
                      <div style={{ fontSize: '0.8rem', color: '#aaa' }}>
                        üîí {system.price} {system.currency.toUpperCase()}
                      </div>
                    )}
                  </div>
                );
                
                })}
            </div>
          )}
        </div>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {(isLoading || loading) && (
          <div style={{ 
            textAlign: 'center', 
            margin: '20px 0', 
            color: colorStyle, 
            fontSize: '1.2rem',
            background: 'rgba(0, 0, 0, 0.5)',
            padding: '15px',
            borderRadius: '10px',
            border: `1px solid ${colorStyle}`
          }}>
            ‚è≥ {t('processing_purchase')}
          </div>
        )}
        {/* üî• –¢–û–í–ê–†–´ */}
        <div style={{ 
          display: 'flex', 
          flexWrap: 'wrap', 
          gap: '10px', 
          justifyContent: 'space-between'
        }}>
          {/* –ê–°–¢–ï–†–û–ò–î–´ */}
          {activeTab === 'asteroid' && shopItems.asteroids.map((item: Item) => {
            // –û—Å–æ–±—ã–π —Å—Ç–∏–ª—å –¥–ª—è "–±–æ–º–±—ã" (13-–π –∞—Å—Ç–µ—Ä–æ–∏–¥)
            const isBomb = item.id === 13 || item.isBomb;
            const bombBorderColor = isBomb ? '#FFD700' : colorStyle;
            const bombGlow = isBomb ? '0 0 15px #FFD700' : `0 0 8px ${colorStyle}`;
            
            // üî• –û–ë–ù–û–í–õ–ï–ù–û: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞–ª—é—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤—Å–µ –±–æ–º–±—ã TON)
            let displayCurrency = '';
            if (isBomb) {
              displayCurrency = 'TON'; // üí£ –í–°–ï –ë–û–ú–ë–´ –¢–ï–ü–ï–†–¨ –ü–û–ö–£–ü–ê–Æ–¢–°–Ø –ó–ê TON
            } else {
              displayCurrency = currentSystem >= 1 && currentSystem <= 4 ? 'CS' : currentSystem >= 5 ? 'TON' : 'CCC';
            }
            
            return (
              <button
                key={`asteroid-${item.id}-${item.system}`}
                onClick={() => !isLoading && !loading && item.isPreviousPurchased && !item.isPurchased && buyItem('asteroid', item.id, item.price || 0)}
                disabled={item.isPurchased || !item.isPreviousPurchased || isLoading || loading}
                style={{
                  width: 'calc(50% - 5px)',
                  minWidth: '140px',
                  padding: '12px 8px',
                  background: item.isPurchased 
                    ? 'rgba(0, 255, 0, 0.2)'  // üî• –ó–ï–õ–ï–ù–´–ô —Ñ–æ–Ω –¥–ª—è –∫—É–ø–ª–µ–Ω–Ω—ã—Ö
                    : !item.isPreviousPurchased 
                      ? 'rgba(255, 0, 0, 0.2)' // –ö–†–ê–°–ù–´–ô –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö
                      : 'rgba(0, 0, 0, 0.5)',  // –ß–ï–†–ù–´–ô –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
                  border: `2px solid ${bombBorderColor}`,
                  borderRadius: '12px',
                  boxShadow: bombGlow,
                  color: '#fff',
                  fontSize: '0.9rem',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  gap: '6px',
                  cursor: item.isPurchased || !item.isPreviousPurchased || isLoading || loading ? 'not-allowed' : 'pointer',
                  transition: 'all 0.3s ease',
                  boxSizing: 'border-box',
                  opacity: isLoading || loading ? 0.7 : 1,
                }}
                onMouseEnter={e => !item.isPurchased && item.isPreviousPurchased && !isLoading && !loading && (e.currentTarget.style.transform = 'scale(1.02)')}
                onMouseLeave={e => (e.currentTarget.style.transform = 'scale(1)')}
              >
                <span style={{ fontSize: '1rem', fontWeight: 'bold' }}>
                  {isBomb ? 'üí£' : 'üåç'} {getItemName('asteroid', item.id, currentSystem)}
                </span>
                {/* üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –±–æ–º–±–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–∏—Å—Ç–µ–º—ã */}
                <span style={{ fontSize: '0.8rem' }}>üí† {getResourceName()}: {getResourceValue(item)}</span>
                <span style={{ fontSize: '0.8rem' }}>
                  üí∞ {item.price || 0} {displayCurrency}
                </span>
                
                {/* üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ */}
                {item.isPurchased && !isBomb && <span style={{ color: '#00ff00', fontWeight: 'bold', fontSize: '0.8rem' }}>
                  ‚úÖ {t('purchased') || '–ö—É–ø–ª–µ–Ω–æ'}
                </span>}
                
                {!item.isPreviousPurchased && <span style={{ color: '#ff4444', fontSize: '0.8rem' }}>
                  {isBomb ? `üîí ${t('bomb_available') || '–ö—É–ø–∏—Ç–µ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã'}` : `üîí ${t('buy_previous') || '–ö—É–ø–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π'}`}
                </span>}
                
                {isBomb && item.isPreviousPurchased && <span style={{ color: '#ffa500', fontSize: '0.8rem' }}>
                  üîÑ {t('restore_limits') || '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç—ã'}
                </span>}
              </button>
            );
          })}

          {/* –î–†–û–ù–´ */}
          {activeTab === 'drones' && shopItems.drones.map((item: Item) => (
            <button
              key={`drone-${item.id}-${item.system}`}
              onClick={() => !item.isPurchased && item.isPreviousPurchased && !isLoading && !loading && buyItem('drones', item.id, item.price || 0)}
              disabled={item.isPurchased || !item.isPreviousPurchased || isLoading || loading}
              style={{
                width: 'calc(50% - 5px)',
                minWidth: '140px',
                padding: '12px 8px',
                background: item.isPurchased 
                  ? 'rgba(0, 255, 0, 0.2)' 
                  : !item.isPreviousPurchased 
                    ? 'rgba(255, 0, 0, 0.2)' 
                    : 'rgba(0, 0, 0, 0.5)',
                border: `2px solid ${colorStyle}`,
                borderRadius: '12px',
                boxShadow: `0 0 8px ${colorStyle}`,
                color: '#fff',
                fontSize: '0.9rem',
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                gap: '6px',
                cursor: item.isPurchased || !item.isPreviousPurchased || isLoading || loading ? 'not-allowed' : 'pointer',
                transition: 'all 0.3s ease',
                boxSizing: 'border-box',
                opacity: isLoading || loading ? 0.7 : 1,
              }}
              onMouseEnter={e => !item.isPurchased && item.isPreviousPurchased && !isLoading && !loading && (e.currentTarget.style.transform = 'scale(1.02)')}
              onMouseLeave={e => (e.currentTarget.style.transform = 'scale(1)')}
            >
              <span style={{ fontSize: '1rem', fontWeight: 'bold' }}>ü§ñ {getItemName('drone', item.id, currentSystem)}</span>
              <span style={{ fontSize: '0.8rem' }}>‚ö° {getResourceName()}/–¥–µ–Ω—å: {getDroneProductivity(item)}</span>
              <span style={{ fontSize: '0.8rem' }}>üí∞ {item.price || 0} {currentSystem >= 1 && currentSystem <= 4 ? 'CS' : currentSystem >= 5 ? 'TON' : 'CCC'}</span>
              {item.isPurchased && <span style={{ color: '#00ff00', fontWeight: 'bold', fontSize: '0.8rem' }}>‚úÖ {t('purchased') || '–ö—É–ø–ª–µ–Ω–æ'}</span>}
              {!item.isPreviousPurchased && <span style={{ color: '#ff4444', fontSize: '0.8rem' }}>üîí {t('buy_previous') || '–ö—É–ø–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π'}</span>}
            </button>
          ))}

          {/* –ö–ê–†–ì–û */}
          {activeTab === 'cargo' && shopItems.cargo.map((item: Item) => (
            <button
              key={`cargo-${item.id}-${item.system}`}
              onClick={() => !item.isPurchased && item.isPreviousPurchased && !isLoading && !loading && buyItem('cargo', item.id, item.price || 0)}
              disabled={item.isPurchased || !item.isPreviousPurchased || isLoading || loading}
              style={{
                width: 'calc(50% - 5px)',
                minWidth: '140px',
                padding: '12px 8px',
                background: item.isPurchased 
                  ? 'rgba(0, 255, 0, 0.2)' 
                  : !item.isPreviousPurchased 
                    ? 'rgba(255, 0, 0, 0.2)' 
                    : 'rgba(0, 0, 0, 0.5)',
                border: `2px solid ${colorStyle}`,
                borderRadius: '12px',
                boxShadow: `0 0 8px ${colorStyle}`,
                color: '#fff',
                fontSize: '0.9rem',
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                gap: '6px',
                cursor: item.isPurchased || !item.isPreviousPurchased || isLoading || loading ? 'not-allowed' : 'pointer',
                transition: 'all 0.3s ease',
                boxSizing: 'border-box',
                opacity: isLoading || loading ? 0.7 : 1,
              }}
              onMouseEnter={e => !item.isPurchased && item.isPreviousPurchased && !isLoading && !loading && (e.currentTarget.style.transform = 'scale(1.02)')}
              onMouseLeave={e => (e.currentTarget.style.transform = 'scale(1)')}
            >
              <span style={{ fontSize: '1rem', fontWeight: 'bold' }}>üì¶ {getItemName('cargo', item.id, currentSystem)}</span>
              <span style={{ fontSize: '0.8rem' }}>üìä {t('capacity') || '–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å'}: {item.capacity === 999999 || item.capacity === 99999 ? '‚àû' : item.capacity || 0}</span>
              <span style={{ fontSize: '0.8rem' }}>üí∞ {item.price || 0} {currentSystem >= 1 && currentSystem <= 4 ? 'CS' : currentSystem >= 5 ? 'TON' : 'CCC'}</span>
              {item.isPurchased && <span style={{ color: '#00ff00', fontWeight: 'bold', fontSize: '0.8rem' }}>‚úÖ {t('purchased') || '–ö—É–ø–ª–µ–Ω–æ'}</span>}
              {!item.isPreviousPurchased && <span style={{ color: '#ff4444', fontSize: '0.8rem' }}>üîí {t('buy_previous') || '–ö—É–ø–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π'}</span>}
              {item.id === 5 && !item.isPurchased && <span style={{ color: '#ffa500', fontSize: '0.8rem' }}>‚≠ê {t('infinite_capacity') || '–ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å'}</span>}
            </button>
          ))}
        </div>
        {error && (
          <div style={{ color: '#ff0000', textAlign: 'center', margin: '20px 0' }}>
            {error}
          </div>
        )}
      </div>

      {/* üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô TOAST –ö–û–ù–¢–ï–ô–ù–ï–† */}
      <div style={{
        position: 'fixed',
        top: '20px',
        right: '20px',
        zIndex: 1000,
        display: 'flex',
        flexDirection: 'column',
        gap: '10px'
      }}>
        {toasts.map(toast => (
          <ToastNotification
            key={toast.id}
            message={toast.message}
            type={toast.type}
            duration={4000}
            colorStyle={colorStyle}
          />
        ))}
      </div>

      {/* –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <NavigationMenu colorStyle={colorStyle} />

      {/* üî• –ù–û–í–û–ï: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∏—Å—Ç–µ–º—ã 5) */}
      {showUnlockModal && targetSystem && (
        <SystemUnlockModal 
          systemId={targetSystem}
          onUnlock={handleUnlockSuccess}
          onCancel={handleUnlockCancel}
        />
      )}
    </div>
  );
};

export default ShopPage;