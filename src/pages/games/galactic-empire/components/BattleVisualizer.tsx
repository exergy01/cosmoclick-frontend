import React, { useState } from 'react';
import BattleScreen from './BattleScreen'; // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
import BattleScreenTactical from './BattleScreenTactical'; // –¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è
import BattleScreenCinematic from './BattleScreenCinematic'; // –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω–∞—è
import BattleScreenMinimal from './BattleScreenMinimal'; // –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è
import BattleScreenElite from './BattleScreenElite'; // Elite wireframe —Å—Ç–∏–ª—å

interface BattleVisualizerProps {
  battleLog: any[];
  playerFleet: any[];
  enemyFleet: any[];
  winner: number;
  reward: number;
  onBattleEnd: () => void;
}

const BattleVisualizer: React.FC<BattleVisualizerProps> = (props) => {
  const [visualMode, setVisualMode] = useState<number>(5); // 1=Original, 2=Tactical, 3=Cinematic, 4=Minimal, 5=Elite

  // –í—ã–±–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ —Ä–µ–∂–∏–º—É
  const renderBattle = () => {
    switch (visualMode) {
      case 1:
        return <BattleScreen {...props} />;
      case 2:
        return <BattleScreenTactical {...props} />;
      case 3:
        return <BattleScreenCinematic {...props} />;
      case 4:
        return <BattleScreenMinimal {...props} />;
      case 5:
        return <BattleScreenElite {...props} />;
      default:
        return <BattleScreenElite {...props} />;
    }
  };

  return (
    <div style={{ position: 'relative', width: '100%', height: '100vh' }}>
      {/* –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ */}
      <div style={{
        position: 'absolute',
        top: '10px',
        right: '10px',
        zIndex: 10000,
        display: 'flex',
        gap: '10px',
        flexDirection: 'column'
      }}>
        <button
          onClick={() => setVisualMode(1)}
          style={{
            padding: '10px 20px',
            background: visualMode === 1 ? '#ff6600' : 'rgba(0,0,0,0.7)',
            color: '#fff',
            border: '2px solid #ff6600',
            borderRadius: '10px',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: 'bold'
          }}
        >
          üöÄ –ë–û–ô 1 (–û—Ä–∏–≥–∏–Ω–∞–ª)
        </button>

        <button
          onClick={() => setVisualMode(2)}
          style={{
            padding: '10px 20px',
            background: visualMode === 2 ? '#00ff88' : 'rgba(0,0,0,0.7)',
            color: '#fff',
            border: '2px solid #00ff88',
            borderRadius: '10px',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: 'bold'
          }}
        >
          üìä –ë–û–ô 2 (–¢–∞–∫—Ç–∏–∫–∞)
        </button>

        <button
          onClick={() => setVisualMode(3)}
          style={{
            padding: '10px 20px',
            background: visualMode === 3 ? '#ff00ff' : 'rgba(0,0,0,0.7)',
            color: '#fff',
            border: '2px solid #ff00ff',
            borderRadius: '10px',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: 'bold'
          }}
        >
          üé¨ –ë–û–ô 3 (–ö–∏–Ω–æ)
        </button>

        <button
          onClick={() => setVisualMode(4)}
          style={{
            padding: '10px 20px',
            background: visualMode === 4 ? '#00d4ff' : 'rgba(0,0,0,0.7)',
            color: '#fff',
            border: '2px solid #00d4ff',
            borderRadius: '10px',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: 'bold'
          }}
        >
          ‚ö° –ë–û–ô 4 (–ú–∏–Ω–∏–º–∞–ª)
        </button>

        <button
          onClick={() => setVisualMode(5)}
          style={{
            padding: '10px 20px',
            background: visualMode === 5 ? '#00ff00' : 'rgba(0,0,0,0.7)',
            color: '#fff',
            border: '2px solid #00ff00',
            borderRadius: '10px',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: 'bold',
            boxShadow: visualMode === 5 ? '0 0 20px rgba(0,255,0,0.6)' : 'none'
          }}
        >
          üéÆ –ë–û–ô 5 (ELITE)
        </button>
      </div>

      {/* –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ */}
      {renderBattle()}
    </div>
  );
};

export default BattleVisualizer;
