// galactic-slots/types/index.ts

export type SlotSymbol = 'üåü' | 'üöÄ' | 'üåå' | '‚≠ê' | 'üåç' | '‚òÑÔ∏è';

export interface WinningLine {
  line: number;
  symbol: SlotSymbol;
  count: number;
  multiplier: number;
  hasWild: boolean;
  winAmount: number;
}

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å backend –æ—Ç–≤–µ—Ç–æ–º
export interface SlotResult {
  gameId: string;
  symbols: SlotSymbol[];
  winningLines: WinningLine[];
  totalWin: number;
  profit: number;
  isWin: boolean;
  betAmount: number;
  timestamp?: number; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
}

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å backend —Å—Ç–∞—Ç—É—Å–æ–º
export interface GalacticSlotsStatus {
  success: boolean;
  balance: number;
  dailyGames: number;
  dailyAds: number;
  canPlayFree: boolean;
  canWatchAd: boolean;
  gamesLeft: number;
  adsLeft: number;
  minBet: number;
  maxBet: number;
  stats: {
    total_games: number;
    total_wins: number;
    total_losses: number;
    total_bet: number;
    total_won: number;
    best_streak: number;    // –ò–∑–º–µ–Ω–µ–Ω–æ —Å best_win
    worst_streak: number;   // –ò–∑–º–µ–Ω–µ–Ω–æ —Å worst_loss
  };
  error?: string;
}

export interface SpinResponse {
  success: boolean;
  result?: SlotResult;
  error?: string;
}

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å backend –æ—Ç–≤–µ—Ç–æ–º
export interface AdWatchResponse {
  success: boolean;
  adsRemaining: number;
  adsWatched: number;
  maxAds: number;
  message?: string;
  error?: string;
}

export interface SlotGameHistory {
  id: number;
  date: string;
  betAmount: number;
  winAmount: number;
  profit: number;
  result: 'win' | 'loss';
  symbols: SlotSymbol[];
  winningLines: WinningLine[];
  jackpotContribution: number;
}

export interface SlotHistoryResponse {
  success: boolean;
  history: SlotGameHistory[];
  total: number;
  hasMore: boolean;
  error?: string;
}

export type SlotGameState = 'waiting' | 'spinning' | 'revealing' | 'finished';

export interface ToastNotification {
  id: number;
  message: string;
  type: 'success' | 'error' | 'warning';
  duration: number;
}

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å backend)
export interface SymbolInfo {
  id: string;
  multipliers: number[];
  probability: number;
}

export const SYMBOL_INFO: Record<SlotSymbol, SymbolInfo> = {
  'üåü': { id: 'wild', multipliers: [50, 500, 5000], probability: 0.8 },    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
  'üöÄ': { id: 'ship', multipliers: [15, 75, 500], probability: 2.5 },      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
  'üåå': { id: 'galaxy', multipliers: [10, 50, 250], probability: 5.0 },    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
  '‚≠ê': { id: 'star', multipliers: [8, 40, 150], probability: 8.0 },        // –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  'üåç': { id: 'planet', multipliers: [4, 15, 50], probability: 15.0 },      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
  '‚òÑÔ∏è': { id: 'asteroid', multipliers: [2, 5, 15], probability: 68.7 }      // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
};

// 20 –ª–∏–Ω–∏–π –≤—ã–ø–ª–∞—Ç (—Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è –∏–∑ backend)
export const PAYLINES = [
  [0, 1, 2, 3, 4],     // –õ–∏–Ω–∏—è 1: –≤–µ—Ä—Ö–Ω–∏–π —Ä—è–¥
  [5, 6, 7, 8, 9],     // –õ–∏–Ω–∏—è 2: —Å—Ä–µ–¥–Ω–∏–π —Ä—è–¥  
  [10, 11, 12, 13, 14], // –õ–∏–Ω–∏—è 3: –Ω–∏–∂–Ω–∏–π —Ä—è–¥
  [0, 6, 12, 8, 4],    // –õ–∏–Ω–∏—è 4: –¥–∏–∞–≥–æ–Ω–∞–ª—å
  [10, 6, 2, 8, 14],   // –õ–∏–Ω–∏—è 5: –¥–∏–∞–≥–æ–Ω–∞–ª—å
  [5, 1, 7, 3, 9],     // –õ–∏–Ω–∏—è 6: –∑–∏–≥–∑–∞–≥
  [5, 11, 7, 13, 9],   // –õ–∏–Ω–∏—è 7: –∑–∏–≥–∑–∞–≥
  [0, 1, 7, 3, 4],     // –õ–∏–Ω–∏—è 8: V-–æ–±—Ä–∞–∑–Ω–∞—è
  [10, 11, 7, 13, 14], // –õ–∏–Ω–∏—è 9: V-–æ–±—Ä–∞–∑–Ω–∞—è
  [0, 6, 7, 8, 4],     // –õ–∏–Ω–∏—è 10: –≤–æ–ª–Ω–∞
  [10, 6, 7, 8, 14],   // –õ–∏–Ω–∏—è 11: –≤–æ–ª–Ω–∞
  [5, 1, 2, 3, 9],     // –õ–∏–Ω–∏—è 12: –∫—É–ø–æ–ª
  [5, 11, 12, 13, 9],  // –õ–∏–Ω–∏—è 13: –∫—É–ø–æ–ª
  [0, 11, 2, 13, 4],   // –õ–∏–Ω–∏—è 14: –∑–∏–≥–∑–∞–≥
  [10, 1, 12, 3, 14],  // –õ–∏–Ω–∏—è 15: –∑–∏–≥–∑–∞–≥
  [5, 6, 2, 8, 9],     // –õ–∏–Ω–∏—è 16: —Å—Ç—Ä–µ–ª–∞ –≤–≤–µ—Ä—Ö
  [5, 6, 12, 8, 9],    // –õ–∏–Ω–∏—è 17: —Å—Ç—Ä–µ–ª–∞ –≤–Ω–∏–∑
  [0, 6, 2, 8, 14],    // –õ–∏–Ω–∏—è 18: M-–æ–±—Ä–∞–∑–Ω–∞—è
  [10, 6, 12, 8, 4],   // –õ–∏–Ω–∏—è 19: W-–æ–±—Ä–∞–∑–Ω–∞—è
  [0, 1, 12, 3, 4]     // –õ–∏–Ω–∏—è 20: –¥—É–≥–∞
];

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–ª –±–æ–ª—å—à–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ - —É–ø—Ä–æ—Å—Ç–∏–ª
export interface SlotTranslations {
  title: string;
  subtitle: string;
  placeBet: string;
  betAmount: string;
  spin: string;
  gamesLeft: string;
  extraGame: string;
  watching: string;
  backToGames: string;
  loading: string;
  lastGames: string;
  fullHistory: string;
  time: string;
  bet: string;
  result: string;
  outcome: string;
  win: string;
  loss: string;
  errors: {
    betTooLow: string;
    betTooHigh: string;
    insufficientFunds: string;
    dailyLimit: string;
    spinError: string;
  };
  notifications: {
    winMessage: string;
    bigWinMessage: string;
    lossMessage: string;
    extraGameReceived: string;
  };
}

export {};