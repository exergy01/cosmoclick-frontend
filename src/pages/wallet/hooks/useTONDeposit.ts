// src/pages/wallet/hooks/useTONDeposit.ts - –ë–ï–ó SETTIMEOUT + –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
import { useState } from 'react';
import { useTonConnectUI, useTonAddress } from '@tonconnect/ui-react';
import axios from 'axios';

const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';

interface UseTONDepositProps {
  playerId?: string;
  onSuccess?: (message: string) => void;
  onError?: (error: string) => void;
}

export const useTONDeposit = ({ playerId, onSuccess, onError }: UseTONDepositProps = {}) => {
  const [isProcessing, setIsProcessing] = useState(false);
  const [tonConnectUI] = useTonConnectUI();
  const userAddress = useTonAddress();

  const sendDepositTransaction = async (amount: number): Promise<boolean> => {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!tonConnectUI || !userAddress) {
      onError?.('–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫');
      return false;
    }

    if (!playerId) {
      onError?.('Player ID –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return false;
    }

    if (isNaN(amount) || amount <= 0) {
      onError?.('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞');
      return false;
    }

    if (amount < 0.01) {
      onError?.('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: 0.01 TON');
      return false;
    }

    setIsProcessing(true);

    try {
      const gameWalletAddress = process.env.REACT_APP_GAME_WALLET_ADDRESS || 'UQCOZZx-3RSxIVS2QFcuMBwDUZPWgh8FhRT7I6Qo_pqT-h60';
      const nanoAmount = Math.floor(amount * 1_000_000_000);

      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:', {
        amount: amount,
        nanoAmount: nanoAmount,
        from: userAddress,
        to: gameWalletAddress,
        playerId: playerId
      });

      // –ü–†–û–°–¢–ê–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø –ë–ï–ó payload
      const transaction = {
        validUntil: Math.floor(Date.now() / 1000) + 300, // 5 –º–∏–Ω—É—Ç
        messages: [
          {
            address: gameWalletAddress,
            amount: nanoAmount.toString()
            // –£–±–∏—Ä–∞–µ–º payload –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
          }
        ]
      };
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      const result = await tonConnectUI.sendTransaction(transaction);
      
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', result);
      
      // –ù–ï–ú–ï–î–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–ú–ï–°–¢–û SETTIMEOUT
      onSuccess?.(`–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å" –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è.`);
      
      // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–∞–∑—É (–Ω–æ –Ω–µ –±—É–¥–µ–º –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ)
      try {
        console.log('üîç –ü–æ–ø—ã—Ç–∫–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞...');
        
        const checkResponse = await axios.post(`${API_URL}/api/wallet/check-deposit-by-address`, {
          player_id: playerId,
          expected_amount: amount,
          sender_address: userAddress,
          game_wallet: gameWalletAddress
        });
        
        if (checkResponse.data.success && checkResponse.data.message !== 'Deposit already processed') {
          console.log('‚úÖ –î–µ–ø–æ–∑–∏—Ç –Ω–∞–π–¥–µ–Ω –∏ –∑–∞—á–∏—Å–ª–µ–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ!');
          onSuccess?.(`üéâ –î–µ–ø–æ–∑–∏—Ç –Ω–∞–π–¥–µ–Ω –∏ –∑–∞—á–∏—Å–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!`);
        } else {
          console.log('‚è≥ –î–µ–ø–æ–∑–∏—Ç –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
          // –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—ã—à–µ
        }
        
      } catch (checkError: any) {
        console.log('‚ö†Ô∏è –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ):', checkError.message);
        // –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—ã—à–µ
      }
            
      return true;

    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', err);
      
      let errorMessage = '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏';
      
      if (err.message?.includes('User declined') || err.message?.includes('declined')) {
        errorMessage = '–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é';
      } else if (err.message?.includes('Insufficient') || err.message?.includes('insufficient')) {
        errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON –≤ –∫–æ—à–µ–ª—å–∫–µ';
      } else if (err.message?.includes('Network') || err.message?.includes('network')) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑';
      } else if (err.message?.includes('timeout')) {
        errorMessage = '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑';
      } else if (err.message?.includes('connection')) {
        errorMessage = '–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∫–æ—à–µ–ª—å–∫—É';
      }
      
      onError?.(errorMessage);
      return false;
      
    } finally {
      setIsProcessing(false);
    }
  };

  return {
    sendDepositTransaction,
    isProcessing
  };
};