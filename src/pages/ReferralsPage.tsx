import React, { useState, useEffect } from 'react';
import { usePlayer } from '../context/PlayerContext';
import { useTranslation } from 'react-i18next';
import CurrencyPanel from '../components/CurrencyPanel';
import NavigationMenu from '../components/NavigationMenu';

const ReferralsPage: React.FC = () => {
  const { t } = useTranslation();
  const { player, currentSystem, loading } = usePlayer();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const [toastMessage, setToastMessage] = useState<string>('');
  const [showToast, setShowToast] = useState(false);
  const [isInitialLoading, setIsInitialLoading] = useState(true);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (player || (!loading && !player)) {
      setIsInitialLoading(false);
    }
  }, [player, loading]);

  // üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –û–¢–õ–ê–î–ö–ê
  console.log('üîç –ü–û–õ–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –†–ï–§–ï–†–ê–õ–û–í:', {
    player_exists: !!player,
    telegram_id: player?.telegram_id,
    referrals_count: player?.referrals_count,
    referrals_array: player?.referrals,
    referrals_length: player?.referrals?.length,
    honor_board: player?.honor_board,
    honor_board_length: player?.honor_board?.length,
    loading: loading,
    isInitialLoading: isInitialLoading
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const showToastMessage = (message: string) => {
    setToastMessage(message);
    setShowToast(true);
    setTimeout(() => {
      setShowToast(false);
    }, 1500);
  };

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –¥–ª—è Telegram
  const handleShare = () => {
    if (!player?.referral_link) {
      showToastMessage('–°—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      return;
    }

    try {
      // Telegram WebApp - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
      if ((window as any).Telegram?.WebApp) {
        const telegramWebApp = (window as any).Telegram.WebApp;
        
        // –í–∏–±—Ä–∞—Ü–∏—è
        if (telegramWebApp.HapticFeedback) {
          telegramWebApp.HapticFeedback.impactOccurred('light');
        }

        // –ü—Ä–æ–±—É–µ–º Telegram –º–µ—Ç–æ–¥—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
        if (telegramWebApp.openTelegramLink) {
          const shareText = encodeURIComponent('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ CosmoClick –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã!');
          const shareUrl = encodeURIComponent(player.referral_link);
          telegramWebApp.openTelegramLink(`https://t.me/share/url?url=${shareUrl}&text=${shareText}`);
          showToastMessage('–û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è');
          return;
        }

        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
        if (telegramWebApp.openLink) {
          const shareText = encodeURIComponent('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ CosmoClick –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã!');
          const shareUrl = encodeURIComponent(player.referral_link);
          telegramWebApp.openLink(`https://t.me/share/url?url=${shareUrl}&text=${shareText}`);
          showToastMessage('–û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è');
          return;
        }
      }

      // Fallback –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      if (navigator.share) {
        navigator.share({
          title: 'CosmoClick - –ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞',
          text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ CosmoClick –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã!',
          url: player.referral_link,
        }).then(() => {
          showToastMessage('–ü–æ–¥–µ–ª–∏–ª–∏—Å—å —É—Å–ø–µ—à–Ω–æ');
        }).catch(err => {
          console.error('Web Share API error:', err);
          copyToClipboard(player.referral_link);
        });
      } else {
        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –∫–æ–ø–∏—Ä—É–µ–º
        copyToClipboard(player.referral_link);
        showToastMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ (–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)');
      }
    } catch (err) {
      console.error('Share error:', err);
      copyToClipboard(player.referral_link);
      showToastMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞');
    }
  };

  const copyToClipboard = (text: string) => {
    try {
      // –ú–µ—Ç–æ–¥ 1: Clipboard API
      if (navigator.clipboard && navigator.clipboard.writeText) {
        navigator.clipboard.writeText(text).then(() => {
          showToastMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞');
        }).catch(() => {
          fallbackCopy(text);
        });
      } else {
        fallbackCopy(text);
      }
    } catch (err) {
      console.error('Copy error:', err);
      fallbackCopy(text);
    }
  };

  const fallbackCopy = (text: string) => {
    try {
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      textArea.style.opacity = '0';
      document.body.appendChild(textArea);
      
      textArea.focus();
      textArea.select();
      textArea.setSelectionRange(0, text.length);
      
      const successful = document.execCommand('copy');
      document.body.removeChild(textArea);
      
      if (successful) {
        showToastMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞');
      } else {
        showToastMessage('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
      }
    } catch (err) {
      console.error('Fallback copy failed:', err);
      showToastMessage('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
  };

  const handleCopy = () => {
    if (player?.referral_link) {
      copyToClipboard(player.referral_link);
    } else {
      showToastMessage('–°—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
  };

  const colorStyle = player?.color || '#00f0ff';

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
  const isDefaultPlayer = player?.telegram_id === '1222791281';

  // üî• –ë–û–õ–ï–ï –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  const safeReferrals = Array.isArray(player?.referrals) ? player.referrals : [];
  const safeHonorBoard = Array.isArray(player?.honor_board) ? player.honor_board : [];

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (—É–±–∏—Ä–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –≤—Å–µ—Ö –∫—Ä–æ–º–µ –Ω–µ–≥–æ —Å–∞–º–æ–≥–æ)
  const filteredReferrals = safeReferrals.filter((ref: any) => 
    isDefaultPlayer || ref.referred_id !== '1222791281'
  );

  // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–æ—Å–∫—É –ø–æ—á–µ—Ç–∞ (—É–±–∏—Ä–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –≤—Å–µ—Ö –∫—Ä–æ–º–µ –Ω–µ–≥–æ —Å–∞–º–æ–≥–æ)
  const filteredHonorBoard = safeHonorBoard.filter((entry: any) => 
    isDefaultPlayer || entry.telegram_id !== '1222791281'
  );

  // üî• –ü–û–ö–ê–ó–´–í–ê–ï–ú –ó–ê–ì–†–£–ó–ö–£ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –≥—Ä—É–∑—è—Ç—Å—è
  if (isInitialLoading || loading) {
    return (
      <div style={{ 
        minHeight: '100vh',
        color: '#fff', 
        textAlign: 'center', 
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        background: 'linear-gradient(135deg, #0a0a0a, #1a1a2e, #16213e)',
        flexDirection: 'column'
      }}>
        <div style={{
          fontSize: '2rem',
          marginBottom: '20px',
          animation: 'pulse 2s ease-in-out infinite'
        }}>
          üöÄ
        </div>
        <div style={{ fontSize: '1.2rem' }}>
          {t('loading')}...
        </div>
        <style>
          {`
            @keyframes pulse {
              0%, 100% { transform: scale(1); opacity: 1; }
              50% { transform: scale(1.1); opacity: 0.7; }
            }
          `}
        </style>
      </div>
    );
  }

  // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (!player) {
    return (
      <div style={{ 
        color: '#fff', 
        textAlign: 'center', 
        marginTop: '50px',
        padding: '20px'
      }}>
        <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h2>
        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</p>
      </div>
    );
  }

  return (
    <div
      style={{
        backgroundImage: `url(/assets/cosmo-bg-${currentSystem}.png)`,
        backgroundSize: 'cover',
        backgroundAttachment: 'fixed',
        minHeight: '100vh',
        color: '#fff',
        display: 'flex',
        flexDirection: 'column',
        padding: '10px',
        position: 'relative',
      }}
    >
      {/* –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–Ω–∏–∑—É */}
      {showToast && (
        <div
          style={{
            position: 'fixed',
            bottom: '150px',
            left: '50%',
            transform: 'translateX(-50%)',
            background: `linear-gradient(135deg, ${colorStyle}80, ${colorStyle}60)`,
            border: `2px solid ${colorStyle}`,
            borderRadius: '15px',
            padding: '15px 25px',
            boxShadow: `0 0 30px ${colorStyle}`,
            color: '#fff',
            fontSize: '1rem',
            fontWeight: 'bold',
            zIndex: 1000,
            animation: 'slideUpFade 1.5s ease-in-out',
            textAlign: 'center',
            maxWidth: '300px'
          }}
        >
          {toastMessage}
        </div>
      )}

      {/* CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è */}
      <style>
        {`
          @keyframes slideUpFade {
            0% { opacity: 0; transform: translateX(-50%) translateY(20px); }
            20% { opacity: 1; transform: translateX(-50%) translateY(0px); }
            80% { opacity: 1; transform: translateX(-50%) translateY(0px); }
            100% { opacity: 0; transform: translateX(-50%) translateY(-10px); }
          }
        `}
      </style>

      {/* –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –≤–∞–ª—é—Ç–∞–º–∏ */}
      <CurrencyPanel 
        player={player}
        currentSystem={currentSystem}
        colorStyle={colorStyle}
      />

      <div style={{ marginTop: '150px', paddingBottom: '130px' }}>
        <div style={{ textAlign: 'center', padding: '20px' }}>
          <h2 style={{ 
            color: colorStyle, 
            textShadow: `0 0 10px ${colorStyle}`, 
            fontSize: '2.5rem', 
            marginBottom: '30px'
          }}>
            üë• {t('referrals')}
          </h2>

          {/* üîç –í–†–ï–ú–ï–ù–ù–´–ô –ë–õ–û–ö –û–¢–õ–ê–î–ö–ò - –ø–æ–∫–∞–∂–µ—Ç —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –¥–∞–Ω–Ω—ã—Ö */}
          <div style={{
            margin: '10px auto',
            padding: '10px',
            background: 'rgba(255, 165, 0, 0.2)',
            border: '1px solid orange',
            borderRadius: '5px',
            maxWidth: '600px',
            fontSize: '0.8rem',
            textAlign: 'left'
          }}>
            <strong>üîç –û–¢–õ–ê–î–ö–ê:</strong><br/>
            referrals_count: {player?.referrals_count}<br/>
            referrals type: {typeof player?.referrals}<br/>
            referrals length: {player?.referrals?.length}<br/>
            safeReferrals length: {safeReferrals.length}<br/>
            filteredReferrals length: {filteredReferrals.length}<br/>
            honor_board length: {safeHonorBoard.length}
          </div>
          
          {/* –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ */}
          <div style={{
            margin: '20px auto',
            padding: '20px',
            background: 'rgba(0, 0, 0, 0.3)',
            border: `2px solid ${colorStyle}`,
            borderRadius: '15px',
            boxShadow: `0 0 20px ${colorStyle}30`,
            maxWidth: '500px'
          }}>
            <h3 style={{ color: colorStyle, marginBottom: '15px' }}>üîó {t('your_referral_link')}</h3>
            <p style={{ 
              wordBreak: 'break-all', 
              background: 'rgba(255, 255, 255, 0.1)', 
              padding: '10px', 
              borderRadius: '8px',
              fontSize: '0.9rem',
              marginBottom: '15px'
            }}>
              {player?.referral_link || '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...'}
            </p>
            
            {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å */}
            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: '1fr 1fr', 
              gap: '10px', 
              margin: '0 10px'
            }}>
              <button
                onClick={handleShare}
                style={{
                  padding: '12px 10px',
                  background: `linear-gradient(135deg, ${colorStyle}30, ${colorStyle}60, ${colorStyle}30)`,
                  border: `2px solid ${colorStyle}`,
                  borderRadius: '12px',
                  boxShadow: `0 0 15px ${colorStyle}`,
                  color: '#fff',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease',
                  fontWeight: 'bold',
                  fontSize: '0.9rem',
                  width: '100%'
                }}
                onMouseEnter={e => {
                  e.currentTarget.style.transform = 'scale(1.05)';
                  e.currentTarget.style.boxShadow = `0 0 25px ${colorStyle}`;
                }}
                onMouseLeave={e => {
                  e.currentTarget.style.transform = 'scale(1)';
                  e.currentTarget.style.boxShadow = `0 0 15px ${colorStyle}`;
                }}
              >
                üì§ {t('share')}
              </button>
              
              <button
                onClick={handleCopy}
                style={{
                  padding: '12px 10px',
                  background: `linear-gradient(135deg, ${colorStyle}30, ${colorStyle}60, ${colorStyle}30)`,
                  border: `2px solid ${colorStyle}`,
                  borderRadius: '12px',
                  boxShadow: `0 0 15px ${colorStyle}`,
                  color: '#fff',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease',
                  fontWeight: 'bold',
                  fontSize: '0.9rem',
                  width: '100%'
                }}
                onMouseEnter={e => {
                  e.currentTarget.style.transform = 'scale(1.05)';
                  e.currentTarget.style.boxShadow = `0 0 25px ${colorStyle}`;
                }}
                onMouseLeave={e => {
                  e.currentTarget.style.transform = 'scale(1)';
                  e.currentTarget.style.boxShadow = `0 0 15px ${colorStyle}`;
                }}
              >
                üìã {t('copy')}
              </button>
            </div>
          </div>

          {/* –î–æ—Å–∫–∞ –ø–æ—á–µ—Ç–∞ */}
          <div style={{ margin: '20px auto', maxWidth: '600px' }}>
            <h3 style={{ color: colorStyle, textShadow: `0 0 10px ${colorStyle}`, marginBottom: '15px' }}>
              üèÜ {t('honor_board')}
            </h3>
            {(filteredHonorBoard && filteredHonorBoard.length > 0) ? (
              <div style={{ 
                background: 'rgba(0, 0, 0, 0.3)', 
                border: `2px solid ${colorStyle}`, 
                borderRadius: '10px', 
                boxShadow: `0 0 20px ${colorStyle}30`,
                overflow: 'hidden'
              }}>
                <table style={{ width: '100%', borderCollapse: 'collapse' }}>
                  <thead>
                    <tr style={{ background: `${colorStyle}20` }}>
                      <th style={{ border: `1px solid ${colorStyle}`, padding: '10px', color: colorStyle, textShadow: `0 0 5px ${colorStyle}` }}>{t('place')}</th>
                      <th style={{ border: `1px solid ${colorStyle}`, padding: '10px', color: colorStyle, textShadow: `0 0 5px ${colorStyle}` }}>{t('player')}</th>
                      <th style={{ border: `1px solid ${colorStyle}`, padding: '10px', color: colorStyle, textShadow: `0 0 5px ${colorStyle}` }}>{t('referrals_count')}</th>
                    </tr>
                  </thead>
                  <tbody>
                    {filteredHonorBoard.sort((a: any, b: any) => (b.referrals_count || 0) - (a.referrals_count || 0)).slice(0, 10).map((entry: any, index: number) => (
                      <tr key={index} style={{ 
                        background: entry.telegram_id === player?.telegram_id ? `${colorStyle}20` : 'transparent',
                        transition: 'background 0.3s ease'
                      }}>
                        <td style={{ border: `1px solid ${colorStyle}`, padding: '10px', fontWeight: index < 3 ? 'bold' : 'normal' }}>
                          {index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : index + 1}
                        </td>
                        <td style={{ border: `1px solid ${colorStyle}`, padding: '10px' }}>
                          {entry.username || `${t('player')} #${index + 1}`}
                          {entry.telegram_id === player?.telegram_id && ' (–í—ã)'}
                        </td>
                        <td style={{ border: `1px solid ${colorStyle}`, padding: '10px' }}>
                          {entry.referrals_count || 0}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            ) : (
              <div style={{ 
                background: 'rgba(0, 0, 0, 0.3)', 
                border: `2px solid ${colorStyle}`, 
                borderRadius: '10px', 
                padding: '20px', 
                boxShadow: `0 0 10px ${colorStyle}30`
              }}>
                <p>{t('honor_board_empty')}</p>
              </div>
            )}
          </div>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div style={{
            margin: '20px auto',
            padding: '15px',
            background: 'rgba(0, 0, 0, 0.3)',
            border: `1px solid ${colorStyle}`,
            borderRadius: '15px',
            boxShadow: `0 0 15px ${colorStyle}30`,
            maxWidth: '300px'
          }}>
            <h3 style={{ color: colorStyle, marginBottom: '10px' }}>üìä {t('referral_stats')}</h3>
            <p style={{ fontSize: '1.2rem', fontWeight: 'bold' }}>
              {t('total_referrals')}: {player?.referrals_count || 0}
            </p>
          </div>
          
          {/* –°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ */}
          <div style={{ margin: '20px auto', maxWidth: '600px' }}>
            <h3 style={{ color: colorStyle, textShadow: `0 0 10px ${colorStyle}`, marginBottom: '15px' }}>
              üìã {t('referral_list')}
            </h3>
            {(filteredReferrals && filteredReferrals.length > 0) ? (
              <div style={{ 
                background: 'rgba(0, 0, 0, 0.3)', 
                border: `2px solid ${colorStyle}`, 
                borderRadius: '10px', 
                boxShadow: `0 0 20px ${colorStyle}30`,
                overflow: 'hidden'
              }}>
                <table style={{ width: '100%', borderCollapse: 'collapse' }}>
                  <thead>
                    <tr style={{ background: `${colorStyle}20` }}>
                      <th style={{ border: `1px solid ${colorStyle}`, padding: '10px', color: colorStyle, textShadow: `0 0 5px ${colorStyle}` }}>{t('referral')}</th>
                      <th style={{ border: `1px solid ${colorStyle}`, padding: '10px', color: colorStyle, textShadow: `0 0 5px ${colorStyle}` }}>{t('earned_cs')}</th>
                      <th style={{ border: `1px solid ${colorStyle}`, padding: '10px', color: colorStyle, textShadow: `0 0 5px ${colorStyle}` }}>{t('earned_ton')}</th>
                    </tr>
                  </thead>
                  <tbody>
                    {filteredReferrals.map((ref: any, index: number) => (
                      <tr key={index} style={{ transition: 'background 0.3s ease' }}>
                        <td style={{ border: `1px solid ${colorStyle}`, padding: '10px' }}>
                          {ref.username || ref.first_name || `${t('referral')} #${index + 1}`}
                        </td>
                        <td style={{ border: `1px solid ${colorStyle}`, padding: '10px' }}>
                          {ref.cs_earned?.toFixed(2) || '0.00'}
                        </td>
                        <td style={{ border: `1px solid ${colorStyle}`, padding: '10px' }}>
                          {ref.ton_earned?.toFixed(8) || '0.00000000'}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            ) : (
              <div style={{ 
                background: 'rgba(0, 0, 0, 0.3)', 
                border: `2px solid ${colorStyle}`, 
                borderRadius: '10px', 
                padding: '20px', 
                boxShadow: `0 0 10px ${colorStyle}30`
              }}>
                <p>{t('no_referrals')}</p>
                <p style={{ fontSize: '1rem', color: '#aaa', marginTop: '10px' }}>
                  –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –æ—Ç –∏—Ö —Ç—Ä–∞—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ: 1% –≤ CS + 0.1% –≤ TON!
                </p>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <NavigationMenu colorStyle={colorStyle} />
    </div>
  );
};

export default ReferralsPage;