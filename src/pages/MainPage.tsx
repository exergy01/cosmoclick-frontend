import React, { useEffect, useState, useCallback } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { useNewPlayer } from '../context/NewPlayerContext';
import { useGame } from '../context/GameContext';
import { useTranslation } from 'react-i18next';
import axios from 'axios';
import SystemUnlockModal from '../components/SystemUnlockModal';
import CurrencyPanel from '../components/CurrencyPanel';
import NavigationMenu from '../components/NavigationMenu';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —á–∏—Å—Ç—ã–π —Å—á–µ—Ç—á–∏–∫
import { useCleanCounter } from '../hooks/useCleanCounter';

interface Item {
  id: number;
  system: number;
}

interface Drone {
  id: number;
  system: number;
}

interface Asteroid {
  id: number;
  system: number;
  totalCcc?: number;
}

interface CargoLevel {
  id: number;
  system: number;
}

interface ShopButton {
  type: string;
  count: string;
  amount?: string;
}

const API_URL = process.env.NODE_ENV === 'production'
  ? 'https://cosmoclick-backend.onrender.com'
  : 'http://localhost:5000';

const MainPage: React.FC = () => {
  const { t } = useTranslation();
  const { player } = useNewPlayer();
  const { 
    currentSystem, 
    setCurrentSystem, 
    safeCollect
  } = useGame();

  // –ù–æ–≤—ã–π —á–∏—Å—Ç—ã–π —Å—á–µ—Ç—á–∏–∫
  const {
    getCurrentValue,
    resetCleanCounter,
    hasFullSetup,
    getRealCargoCapacity,
    getMiningSpeedPerSecond,
    getRemainingResources,
  } = useCleanCounter({ player, currentSystem });

  const navigate = useNavigate();
  const location = useLocation();
  const [showSystemDropdown, setShowSystemDropdown] = useState(false);
  const [touchStartX, setTouchStartX] = useState<number | null>(null);
  const [touchEndX, setTouchEndX] = useState<number | null>(null);
  const [isCollecting, setIsCollecting] = useState(false); // üîß –î–û–ë–ê–í–õ–ï–ù–û: —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±–æ—Ä–∞
  const minSwipeDistance = 50;

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –°–ë–û–†–ê —Å –æ—Ç–ª–∞–¥–∫–æ–π –∏ –∑–∞—â–∏—Ç–æ–π –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
  const handleSafeClick = async () => {
    if (!player?.telegram_id || isCollecting) {
      console.log('üö´ –°–±–æ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:', { hasPlayer: !!player?.telegram_id, isCollecting });
      return;
    }
    
    setIsCollecting(true); // üîß –ë–õ–û–ö–ò–†–£–ï–ú –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∫–ª–∏–∫–∏
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞
      const currentValue = getCurrentValue(currentSystem);
      
      console.log('üîç –ù–ê–ß–ò–ù–ê–ï–ú –°–ë–û–†:', {
        system: currentSystem,
        currentValue: currentValue.toFixed(5),
        player: player.telegram_id
      });
      
      if (currentValue <= 0) {
        console.log('‚ùå –ù–µ—á–µ–≥–æ —Å–æ–±–∏—Ä–∞—Ç—å:', currentValue);
        
        // üî• –í–†–ï–ú–ï–ù–ù–û –û–ë–´–ß–ù–´–ô ALERT
        alert('–ù–µ—á–µ–≥–æ —Å–æ–±–∏—Ä–∞—Ç—å! –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–∞–∫–æ–ø—è—Ç—Å—è —Ä–µ—Å—É—Ä—Å—ã.');
        return;
      }
      
      const newCollectionTime = new Date().toISOString();
      const updatedLastCollectionTime = { 
        ...player.last_collection_time, 
        [currentSystem]: newCollectionTime 
      };

      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã 4 (CS) –∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º (CCC)
      const collectParams: any = {
        telegramId: player.telegram_id,
        last_collection_time: updatedLastCollectionTime,
        system: currentSystem,
      };

      if (currentSystem === 4) {
        collectParams.collected_cs = currentValue;
        console.log(`üí∞ –ü–ê–†–ê–ú–ï–¢–†–´ –°–ë–û–†–ê CS:`, collectParams);
      } else {
        collectParams.collected_ccc = currentValue;
        console.log(`üí∞ –ü–ê–†–ê–ú–ï–¢–†–´ –°–ë–û–†–ê CCC:`, collectParams);
      }

      console.log('üì° –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ó–ê–ü–†–û–°...');
      const result = await safeCollect(collectParams);

      if (result) {
        console.log('‚úÖ –°–ë–û–† –£–°–ü–ï–®–ï–ù');
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        resetCleanCounter(currentSystem);
      } else {
        console.log('‚ùå –°–ë–û–† –ù–ï –£–î–ê–õ–°–Ø');
      }
    } catch (err) {
      console.error('üí• –û–®–ò–ë–ö–ê –°–ë–û–†–ê:', err);
      
      // üî• –í–†–ï–ú–ï–ù–ù–û –û–ë–´–ß–ù–´–ô ALERT
      alert(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å: ${err}`);
    } finally {
      setIsCollecting(false); // üîß –†–ê–ó–ë–õ–û–ö–ò–†–£–ï–ú –∫–ª–∏–∫–∏
    }
  };

  const handlePurchase = (type: string) => () => {
    navigate('/shop', { state: { tab: type === 'resources' ? 'asteroid' : type } });
  };

  const throttle = (func: (...args: any[]) => void, wait: number) => {
    let timeout: NodeJS.Timeout | null = null;
    return (...args: any[]) => {
      if (!timeout) {
        timeout = setTimeout(() => {
          func(...args);
          timeout = null;
        }, wait);
      }
    };
  };

  const handleTouchStart = (e: React.TouchEvent | React.MouseEvent) => setTouchStartX('touches' in e ? e.touches[0].clientX : e.clientX);
  const handleTouchMove = throttle((e: React.TouchEvent | React.MouseEvent) => {
    setTouchEndX('touches' in e ? e.touches[0].clientX : e.clientX);
  }, 100);
  const handleTouchEnd = () => {
    if (touchStartX === null || touchEndX === null) return;
    const distance = touchStartX - touchEndX;
    if (Math.abs(distance) > minSwipeDistance) {
      // üî• –û–ì–†–ê–ù–ò–ß–ò–í–ê–ï–ú –°–í–ê–ô–ü–´ —Ç–æ–ª—å–∫–æ –¥–æ —Å–∏—Å—Ç–µ–º—ã 5
      if (distance > 0 && currentSystem < 5) setCurrentSystem(currentSystem + 1);
      else if (distance < 0 && currentSystem > 1) setCurrentSystem(currentSystem - 1);
    }
    setTouchStartX(null);
    setTouchEndX(null);
  };

  // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TELEGRAM API (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
  const checkTelegramAPI = async () => {
    const telegramInfo = {
      hasTelegram: !!window.Telegram,
      hasWebApp: !!window.Telegram?.WebApp,
      webAppMethods: window.Telegram?.WebApp ? Object.keys(window.Telegram.WebApp) : [],
      webAppData: window.Telegram?.WebApp || null
    };
    
    const info = `üîç TELEGRAM API –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:\n\n` +
      `‚úÖ Telegram –æ–±—ä–µ–∫—Ç: ${telegramInfo.hasTelegram}\n` +
      `‚úÖ WebApp –æ–±—ä–µ–∫—Ç: ${telegramInfo.hasWebApp}\n\n` +
      `üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã WebApp:\n${telegramInfo.webAppMethods.join(', ')}\n\n` +
      `–≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!`;
    
    // üî• –ö–û–ü–ò–†–£–ï–ú –í –ë–£–§–ï–† –û–ë–ú–ï–ù–ê
    try {
      await navigator.clipboard.writeText(info);
      alert(info + '\n\n‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    } catch (err) {
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      const textArea = document.createElement('textarea');
      textArea.value = info;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      
      alert(info + '\n\n‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (fallback)!');
    }
    
    console.log('Telegram API Info:', telegramInfo);
  };

  if (!player) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  // üî• –£–ë–ò–†–ê–ï–ú –°–ò–°–¢–ï–ú–´ 6 –ò 7 - —Ç–æ–ª—å–∫–æ 5 —Å–∏—Å—Ç–µ–º
  const systemNames = ['–ê–Ω–¥—Ä–æ–º–µ–¥–∞', '–û—Ä–∏–æ–Ω', '–ú–ª–µ—á–Ω—ã–π –ü—É—Ç—å', '–¢—É–º–∞–Ω–Ω–æ—Å—Ç—å –û—Ä–∏–æ–Ω–∞', '–ö—Ä–∞–±–æ–≤–∏–¥–Ω–∞—è –¢—É–º–∞–Ω–Ω–æ—Å—Ç—å'];
  const systemName = `–°–∏—Å—Ç–µ–º–∞ ${currentSystem} - ${systemNames[currentSystem - 1]}`;
  const colorStyle = player.color || '#00f0ff';

  const cargoLevel = player.cargo_levels.find((c: CargoLevel) => c.system === currentSystem);
  const cargoLevelId = cargoLevel ? cargoLevel.id : 0;

  const getMaxItems = async (system: number, type: string): Promise<number> => {
    try {
      let response;
      if (type === 'cargo') {
        response = await axios.get(`${API_URL}/api/shop/cargo`).then(res => res.data);
      } else if (type === 'asteroid') {
        response = await axios.get(`${API_URL}/api/shop/asteroids`).then(res => res.data);
      } else if (type === 'drones') {
        response = await axios.get(`${API_URL}/api/shop/drones`).then(res => res.data);
      }
      const data = response || [];
      return data.filter((item: Item) => item.system === system).length;
    } catch (err) {
      return 0;
    }
  };

  const fetchMaxItems = useCallback(async () => {
    const [maxAsteroids, maxDrones, maxCargo] = await Promise.all([
      getMaxItems(currentSystem, 'asteroid'),
      getMaxItems(currentSystem, 'drones'),
      getMaxItems(currentSystem, 'cargo'),
    ]);
    return { maxAsteroids, maxDrones, maxCargo };
  }, [currentSystem]);

  const [shopButtons, setShopButtons] = useState<ShopButton[]>([]);
  const [initialAsteroidTotals, setInitialAsteroidTotals] = useState<{ [key: number]: number }>({});
  const [showUnlockModal, setShowUnlockModal] = useState(false);
  const [targetSystem, setTargetSystem] = useState<number | null>(null);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–∏—Å—Ç–µ–º—ã
  useEffect(() => {
    if (!player) return;
    
    if (!player.unlocked_systems?.includes(currentSystem)) {
      setTargetSystem(currentSystem);
      setShowUnlockModal(true);
    }
  }, [currentSystem, player?.unlocked_systems]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Å–∏—Å—Ç–µ–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  const handleSystemChange = (systemId: number) => {
    if (!player) return;
    
    if (player.unlocked_systems?.includes(systemId)) {
      setCurrentSystem(systemId);
      setShowSystemDropdown(false);
    } else {
      setTargetSystem(systemId);
      setShowUnlockModal(true);
      setShowSystemDropdown(false);
    }
  };

  const handleUnlockSuccess = () => {
    setShowUnlockModal(false);
    if (targetSystem) {
      setCurrentSystem(targetSystem);
      setTargetSystem(null);
    }
  };

  const handleUnlockCancel = () => {
    setShowUnlockModal(false);
    setTargetSystem(null);
    if (player?.unlocked_systems && player.unlocked_systems.length > 0) {
      const lastUnlocked = Math.max(...player.unlocked_systems);
      setCurrentSystem(lastUnlocked);
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã 1 –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–æ–≤—ã–π
  useEffect(() => {
    if (player && (!player.unlocked_systems || player.unlocked_systems.length === 0)) {
      setTargetSystem(1);
      setShowUnlockModal(true);
    }
  }, [player]);

  useEffect(() => {
    if (!player?.asteroids || !player?.asteroid_total_data) return;

    if (initialAsteroidTotals[currentSystem] === undefined) {
      const totalCcc = player.asteroids
        .filter((a: Asteroid) => a.system === currentSystem)
        .reduce((sum: number, a: Asteroid) => sum + (a.totalCcc || 0), 0);
      setInitialAsteroidTotals((prev) => ({
        ...prev,
        [currentSystem]: totalCcc > 0 ? totalCcc : (player.asteroid_total_data[currentSystem] || 0),
      }));
    }
  }, [currentSystem, player?.asteroids, player?.asteroid_total_data, initialAsteroidTotals]);

  useEffect(() => {
    if (!player) return;
    
    fetchMaxItems().then(({ maxAsteroids, maxDrones, maxCargo }) => {
      const asteroidCount = player.asteroids.filter((a: Asteroid) => a.system === currentSystem).length;
      
      // üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–°–¢–ê–¢–ö–ò –†–ï–°–£–†–°–û–í - –±–µ—Ä–µ–º –∏–∑ asteroid_total_data —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
      const remainingResources = Math.floor((player.asteroid_total_data?.[currentSystem] || 0) * 100000) / 100000;
      
      // üîß –°–ö–û–†–û–°–¢–¨ –î–û–ë–´–ß–ò –í –¢–ï–ö–£–©–ï–ô –°–ò–°–¢–ï–ú–ï
      const miningSpeed = player.mining_speed_data?.[currentSystem] || 0;
      const speedPerHour = (miningSpeed * 3600).toFixed(2);
      
      // üîß –†–ï–ê–õ–¨–ù–ê–Ø –í–ú–ï–°–¢–ò–ú–û–°–¢–¨ –ö–ê–†–ì–û –∏–∑ useCleanCounter
      const realCargoCapacity = getRealCargoCapacity(currentSystem);
      
      setShopButtons([
        { 
          type: 'resources', 
          count: `${asteroidCount}/${maxAsteroids}`, 
          amount: `${remainingResources.toFixed(5)} ${currentSystem === 4 ? 'CS' : 'CCC'}` 
        },
        { 
          type: 'drones', 
          count: `${player.drones.filter((d: Drone) => d.system === currentSystem).length}/${maxDrones}`,
          amount: `${speedPerHour}/—á–∞—Å`
        },
        { 
          type: 'cargo', 
          count: `–£—Ä–æ–≤–µ–Ω—å ${player.cargo_levels.filter((c: any) => c.system === currentSystem).length}`,
          amount: realCargoCapacity === 999999 || realCargoCapacity === 99999 ? '‚àû' : realCargoCapacity.toString()
        },
      ]);
    });
  }, [player, currentSystem, cargoLevelId, initialAsteroidTotals, fetchMaxItems, getRealCargoCapacity]);

  return (
    <div style={{ backgroundImage: `url(/assets/cosmo-bg-${currentSystem}.png)`, backgroundSize: 'cover', backgroundAttachment: 'fixed', minHeight: '100vh', color: '#fff', display: 'flex', flexDirection: 'column', padding: '10px', position: 'relative' }}
      onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} onTouchEnd={handleTouchEnd} onMouseDown={handleTouchStart} onMouseMove={handleTouchMove} onMouseUp={handleTouchEnd}>
      
      {/* –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –≤–∞–ª—é—Ç–∞–º–∏ */}
      <CurrencyPanel 
        player={player}
        currentSystem={currentSystem}
        colorStyle={colorStyle}
      />

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div style={{ marginTop: '150px', paddingBottom: '130px' }}>
        {/* –ö–Ω–æ–ø–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ */}
        <div style={{ display: 'flex', justifyContent: 'space-between', gap: '15px', marginBottom: '10px' }}>
          {shopButtons.map(({ type, count, amount }) => (
            <button key={type} onClick={handlePurchase(type)} style={{ flex: 1, padding: '8px 5px', background: 'rgba(0, 0, 0, 0.5)', border: `2px solid ${colorStyle}`, borderRadius: '15px', boxShadow: `0 0 10px ${colorStyle}`, color: '#fff', fontSize: '1rem', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', gap: '5px', cursor: 'pointer', transition: 'transform 0.3s ease', boxSizing: 'border-box', height: 'auto' }}
              onMouseEnter={e => (e.currentTarget.style.transform = 'scale(1.05)')} onMouseLeave={e => (e.currentTarget.style.transform = 'scale(1)')}>
              <span>{t(type)}</span>
              <span>{count}</span>
              {amount && <span>{amount}</span>}
            </button>
          ))}
        </div>

        {/* üîç –í–†–ï–ú–ï–ù–ù–ê–Ø –ö–ù–û–ü–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò */}
        <div style={{ textAlign: 'center', margin: '10px 0' }}>
          <button 
            onClick={checkTelegramAPI}
            style={{
              padding: '10px 20px',
              background: 'rgba(255, 165, 0, 0.8)',
              border: '2px solid #ffa500',
              borderRadius: '10px',
              color: '#fff',
              fontSize: '0.9rem',
              cursor: 'pointer'
            }}
          >
            üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Telegram API
          </button>
        </div>

        {/* –í—ã–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã */}
        <div style={{ textAlign: 'center', margin: '10px 0', position: 'relative' }}>
          <span onClick={() => { setShowSystemDropdown(!showSystemDropdown); }} style={{ fontSize: '1.5rem', color: colorStyle, textShadow: `0 0 10px ${colorStyle}`, cursor: 'pointer', transition: 'transform 0.3s ease', display: 'inline-block' }}
            onMouseEnter={e => (e.currentTarget.style.transform = 'scale(1.1)')} onMouseLeave={e => (e.currentTarget.style.transform = 'scale(1)')}>
            {systemName}
          </span>
          {showSystemDropdown && (
            <div style={{ position: 'absolute', top: '100%', left: '50%', transform: 'translateX(-50%)', background: 'rgba(0, 0, 0, 0.7)', border: `2px solid ${colorStyle}`, borderRadius: '10px', boxShadow: `0 0 10px ${colorStyle}`, zIndex: 10 }}>
              {/* üî• –û–ì–†–ê–ù–ò–ß–ò–í–ê–ï–ú –¥–æ 5 —Å–∏—Å—Ç–µ–º */}
              {[1, 2, 3, 4, 5].map(i => {
                const isUnlocked = player.unlocked_systems?.includes(i);
                const systemData = {
                  1: { price: 0, currency: 'cs' },
                  2: { price: 150, currency: 'cs' },
                  3: { price: 300, currency: 'cs' },
                  4: { price: 500, currency: 'cs' },
                  5: { price: 15, currency: 'ton' }
                };
                const system = systemData[i as keyof typeof systemData];
                
                return (
                  <div 
                    key={i} 
                    onClick={() => handleSystemChange(i)}
                    style={{ 
                      padding: '10px 20px', 
                      color: isUnlocked ? '#fff' : '#888', 
                      cursor: 'pointer', 
                      textAlign: 'center', 
                      transition: 'background 0.3s ease',
                      borderLeft: isUnlocked ? `4px solid ${colorStyle}` : '4px solid transparent'
                    }}
                    onMouseEnter={e => (e.currentTarget.style.background = 'rgba(0, 240, 255, 0.2)')} 
                    onMouseLeave={e => (e.currentTarget.style.background = 'transparent')}
                  >
                    {`–°–∏—Å—Ç–µ–º–∞ ${i} - ${systemNames[i - 1]}`}
                    {!isUnlocked && (
                      <div style={{ fontSize: '0.8rem', color: '#aaa' }}>
                        üîí {system.price} {system.currency.toUpperCase()}
                      </div>
                    )}
                  </div>
                );
              })}
            </div>
          )}
        </div>

        {/* –°–µ–π—Ñ —Å –Ω–æ–≤—ã–º —Å—á–µ—Ç—á–∏–∫–æ–º –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∑–∞–≥—Ä—É–∑–∫–∏ */}
        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end', margin: '10px', paddingTop: '80px' }}>
          <div 
            style={{ 
              position: 'relative', 
              width: '150px', 
              height: '150px', 
              cursor: isCollecting ? 'wait' : 'pointer',
              opacity: isCollecting ? 0.7 : 1
            }} 
            onClick={handleSafeClick}
          >
            <img 
              src="/assets/safe.png" 
              alt="Safe" 
              style={{ 
                width: '100%', 
                height: '100%', 
                objectFit: 'contain', 
                filter: `drop-shadow(0 0 10px ${colorStyle}) drop-shadow(0 0 20px ${colorStyle})`, 
                transition: 'transform 0.3s ease',
                transform: isCollecting ? 'scale(0.95)' : 'scale(1)'
              }}
              onMouseEnter={e => !isCollecting && (e.currentTarget.style.transform = 'scale(1.1)')} 
              onMouseLeave={e => !isCollecting && (e.currentTarget.style.transform = 'scale(1)')}
            />
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
            {isCollecting && (
              <div style={{
                position: 'absolute',
                top: '50%',
                left: '50%',
                transform: 'translate(-50%, -50%)',
                color: colorStyle,
                fontSize: '2rem',
                animation: 'spin 1s linear infinite'
              }}>
                ‚è≥
              </div>
            )}
          </div>
          
          {/* –°—á–µ—Ç—á–∏–∫ —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π */}
          <p style={{ fontSize: '1.5rem', color: colorStyle, textShadow: `0 0 5px ${colorStyle}`, marginTop: '10px' }}>
            {getCurrentValue(currentSystem).toFixed(5)}
          </p>
          
          {/* –°—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∞ */}
          {isCollecting && (
            <p style={{ fontSize: '1rem', color: '#ffa500', textAlign: 'center', marginTop: '5px' }}>
              –°–±–æ—Ä...
            </p>
          )}
        </div>
      </div>

      {/* CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <style>
        {`
          @keyframes spin {
            from { transform: translate(-50%, -50%) rotate(0deg); }
            to { transform: translate(-50%, -50%) rotate(360deg); }
          }
        `}
      </style>

      {/* –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <NavigationMenu colorStyle={colorStyle} />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã */}
      {showUnlockModal && targetSystem && (
        <SystemUnlockModal 
          systemId={targetSystem}
          onUnlock={handleUnlockSuccess}
          onCancel={handleUnlockCancel}
        />
      )}
    </div>
  );
};

export default MainPage;