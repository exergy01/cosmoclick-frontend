// pages/admin/hooks/useAdminStats.ts
import { useState, useCallback } from 'react';
import { useNewPlayer } from '../../../context/NewPlayerContext';
import type { AdminStats, UseAdminStatsReturn } from '../types';
import axios from 'axios';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –ø–æ–¥—Ö–æ–¥ —á—Ç–æ –∏ –≤ ReferralsPage
const apiUrl = process.env.NODE_ENV === 'production'
  ? 'https://cosmoclick-backend.onrender.com'
  : 'https://cosmoclick-backend.onrender.com';

export const useAdminStats = (): UseAdminStatsReturn => {
  const { player } = useNewPlayer();
  
  const [stats, setStats] = useState<AdminStats | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const loadStats = useCallback(async (): Promise<void> => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ player –∏ –µ–≥–æ telegram_id - –∫–∞–∫ –≤ ReferralsPage
    if (!player?.telegram_id) {
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID –∏–≥—Ä–æ–∫–∞');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üìä –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è:', player.telegram_id);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π axios –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –≤ ReferralsPage
      const response = await axios.get(`${apiUrl}/api/admin/stats/${player.telegram_id}`);
      
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', response.data);
      setStats(response.data);
      
    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∫–∞–∫ –≤ ReferralsPage
      if (err.response?.data?.error) {
        setError(err.response.data.error);
      } else if (err.message) {
        setError(err.message);
      } else {
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }
      
      setStats(null);
    } finally {
      setLoading(false);
    }
  }, [player?.telegram_id]);

  const refresh = useCallback(async (): Promise<void> => {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    await loadStats();
  }, [loadStats]);

  return {
    stats,
    loading,
    error,
    loadStats,
    refresh
  };
};