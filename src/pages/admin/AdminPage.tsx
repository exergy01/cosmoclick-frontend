// pages/admin/AdminPage.tsx
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useNewPlayer } from '../../context/NewPlayerContext';

// –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã —Å fallback
let AdminLayout: React.FC<any> | null = null;
let AdminStatsTab: React.FC<any> | null = null;
let useAdminAuth: any = null;

try {
  AdminLayout = require('./components/AdminLayout').default;
} catch (e) {
  console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ AdminLayout:', e);
}

try {
  AdminStatsTab = require('./components/AdminStatsTab').default;
} catch (e) {
  console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ AdminStatsTab:', e);
}

try {
  useAdminAuth = require('./hooks/useAdminAuth').useAdminAuth;
} catch (e) {
  console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ useAdminAuth:', e);
}

type AdminTabType = 'stats' | 'players' | 'exchange' | 'management';

const AdminPage: React.FC = () => {
  const { player } = useNewPlayer();
  const navigate = useNavigate();
  
  const [activeTab, setActiveTab] = useState<AdminTabType>('stats');
  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState(true);
  const [isAdmin, setIsAdmin] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤ –±–µ–∑ —Ö—É–∫–∞ (–µ—Å–ª–∏ —Ö—É–∫ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è)
  useEffect(() => {
    const checkAdmin = async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞...');
        console.log('üì± Player:', player);
        
        if (!player?.telegram_id) {
          console.log('‚ö†Ô∏è –ù–µ—Ç telegram_id –≤ player');
          
          // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Telegram WebApp
          const webApp = (window as any)?.Telegram?.WebApp;
          if (webApp?.initDataUnsafe?.user?.id) {
            const telegramId = String(webApp.initDataUnsafe.user.id);
            console.log('üì± –ù–∞–π–¥–µ–Ω ID –≤ WebApp:', telegramId);
            
            if (telegramId === '1222791281') {
              setIsAdmin(true);
              setLoading(false);
              return;
            }
          }
          
          setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID');
          setLoading(false);
          return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π ID
        const isAdminUser = String(player.telegram_id) === '1222791281';
        console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞:', {
          telegramId: player.telegram_id,
          isAdmin: isAdminUser
        });
        
        if (isAdminUser) {
          setIsAdmin(true);
        } else {
          setError('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω! –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
          setTimeout(() => navigate('/', { replace: true }), 3000);
        }
        
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∞:', err);
        setError('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
      } finally {
        setLoading(false);
      }
    };

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏–Ω–∞—á–µ —Å–≤–æ—é –ø—Ä–æ–≤–µ—Ä–∫—É
    if (useAdminAuth) {
      try {
        const { isAdmin: hookIsAdmin, loading: hookLoading, error: hookError } = useAdminAuth();
        setIsAdmin(hookIsAdmin);
        setLoading(hookLoading);
        setError(hookError);
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è useAdminAuth:', e);
        checkAdmin();
      }
    } else {
      checkAdmin();
    }
  }, [player, navigate]);

  // –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%)',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        color: '#fff',
        flexDirection: 'column'
      }}>
        <div style={{ 
          fontSize: '4rem', 
          marginBottom: '20px',
          animation: 'pulse 2s infinite'
        }}>üîê</div>
        <div style={{ fontSize: '1.2rem', color: '#aaa' }}>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...</div>
        <style>
          {`
            @keyframes pulse {
              0%, 100% { opacity: 1; }
              50% { opacity: 0.5; }
            }
          `}
        </style>
      </div>
    );
  }

  // –≠–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏ –∏–ª–∏ –æ—Ç–∫–∞–∑–∞ –≤ –¥–æ—Å—Ç—É–ø–µ
  if (error || !isAdmin) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%)',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        color: '#fff'
      }}>
        <div style={{ textAlign: 'center', maxWidth: '600px', padding: '20px' }}>
          <div style={{ fontSize: '4rem', marginBottom: '20px' }}>
            {error ? '‚ö†Ô∏è' : 'üö´'}
          </div>
          <div style={{ fontSize: '1.5rem', marginBottom: '10px' }}>
            {error ? '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è' : '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω'}
          </div>
          <div style={{ fontSize: '1rem', color: '#aaa', marginBottom: '20px' }}>
            {error || '–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'}
          </div>
          <div style={{ fontSize: '0.9rem', color: '#666', marginBottom: '20px' }}>
            –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...
          </div>
          
          <button
            onClick={() => navigate('/')}
            style={{
              padding: '10px 20px',
              background: 'rgba(255, 255, 255, 0.1)',
              border: '2px solid #00f0ff',
              borderRadius: '10px',
              color: '#fff',
              cursor: 'pointer',
              fontSize: '0.9rem',
              transition: 'all 0.3s ease'
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.background = '#00f0ff20';
              e.currentTarget.style.transform = 'scale(1.05)';
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.background = 'rgba(255, 255, 255, 0.1)';
              e.currentTarget.style.transform = 'scale(1)';
            }}
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è —Å–µ–π—á–∞—Å
          </button>
        </div>
      </div>
    );
  }

  const colorStyle = player?.color || '#00f0ff';

  const handlePlayerClick = (playerId: string) => {
    console.log('üîç –ö–ª–∏–∫ –ø–æ –∏–≥—Ä–æ–∫—É:', playerId);
    setActiveTab('players');
  };

  // –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–Ω–¥–µ—Ä –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
  if (!AdminLayout || !AdminStatsTab) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%)',
        color: '#fff',
        padding: '20px'
      }}>
        <div style={{ textAlign: 'center', marginBottom: '30px' }}>
          <h1 style={{
            fontSize: '2.5rem',
            color: colorStyle,
            textShadow: `0 0 20px ${colorStyle}`,
            margin: '0 0 20px 0'
          }}>
            üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å CosmoClick
          </h1>
          
          <button
            onClick={() => navigate('/')}
            style={{
              padding: '10px 20px',
              background: 'rgba(255, 255, 255, 0.1)',
              border: `2px solid ${colorStyle}`,
              borderRadius: '10px',
              color: '#fff',
              cursor: 'pointer',
              fontSize: '0.9rem'
            }}
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É
          </button>
        </div>

        <div style={{ textAlign: 'center', padding: '40px' }}>
          <div style={{ fontSize: '3rem', marginBottom: '20px' }}>‚ö†Ô∏è</div>
          <h2 style={{ color: '#ff6666', marginBottom: '15px' }}>
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
          </h2>
          <p style={{ color: '#aaa', marginBottom: '20px' }}>
            –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å AdminLayout –∏–ª–∏ AdminStatsTab –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
          </p>
          
          <div style={{ 
            background: 'rgba(255, 255, 255, 0.05)',
            border: `1px solid ${colorStyle}20`,
            borderRadius: '10px',
            padding: '20px',
            marginTop: '20px'
          }}>
            <h3 style={{ color: colorStyle }}>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
            <div style={{ textAlign: 'left', fontSize: '0.9rem', color: '#ccc' }}>
              <div>AdminLayout –∑–∞–≥—Ä—É–∂–µ–Ω: {AdminLayout ? '‚úÖ' : '‚ùå'}</div>
              <div>AdminStatsTab –∑–∞–≥—Ä—É–∂–µ–Ω: {AdminStatsTab ? '‚úÖ' : '‚ùå'}</div>
              <div>useAdminAuth –∑–∞–≥—Ä—É–∂–µ–Ω: {useAdminAuth ? '‚úÖ' : '‚ùå'}</div>
              <div>Player ID: {player?.telegram_id || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}</div>
              <div>–ê–¥–º–∏–Ω—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å: {isAdmin ? '‚úÖ' : '‚ùå'}</div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  const renderTabContent = () => {
    switch (activeTab) {
      case 'stats':
        return (
          <AdminStatsTab
            colorStyle={colorStyle}
            onPlayerClick={handlePlayerClick}
          />
        );
        
      case 'players':
        return (
          <div style={{ textAlign: 'center', padding: '60px 20px' }}>
            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>üë•</div>
            <h2 style={{ color: colorStyle, marginBottom: '15px' }}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏</h2>
            <p style={{ color: '#aaa' }}>–ú–æ–¥—É–ª—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
          </div>
        );
        
      case 'exchange':
        return (
          <div style={{ textAlign: 'center', padding: '60px 20px' }}>
            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>üí±</div>
            <h2 style={{ color: colorStyle, marginBottom: '15px' }}>–°–∏—Å—Ç–µ–º–∞ –æ–±–º–µ–Ω–æ–≤</h2>
            <p style={{ color: '#aaa' }}>–ú–æ–¥—É–ª—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
          </div>
        );
        
      case 'management':
        return (
          <div style={{ textAlign: 'center', padding: '60px 20px' }}>
            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>‚öôÔ∏è</div>
            <h2 style={{ color: colorStyle, marginBottom: '15px' }}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π</h2>
            <p style={{ color: '#aaa' }}>–ú–æ–¥—É–ª—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
          </div>
        );
        
      default:
        return null;
    }
  };

  return (
    <AdminLayout
      activeTab={activeTab}
      onTabChange={setActiveTab}
      colorStyle={colorStyle}
      playerName={player?.first_name || player?.username}
      playerId={player?.telegram_id}
      onBackClick={() => navigate('/')}
    >
      {renderTabContent()}
    </AdminLayout>
  );
};

export default AdminPage;