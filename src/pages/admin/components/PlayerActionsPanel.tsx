// pages/admin/components/PlayerActionsPanel.tsx
import React from 'react';

interface PlayerActionsPanelProps {
  colorStyle: string;
  onBasicVerification: (playerId: string) => void;
  onPremium30Days: (playerId: string) => void;
  onPremiumForever: (playerId: string) => void;
  onRevokeAll: (playerId: string) => void;
  onUpdateBalance: (playerId: string, currency: string, operation: string, amount: number) => void;
}

const PlayerActionsPanel: React.FC<PlayerActionsPanelProps> = ({
  colorStyle,
  onBasicVerification,
  onPremium30Days,
  onPremiumForever,
  onRevokeAll,
  onUpdateBalance
}) => {
  return (
    <div style={{
      background: 'rgba(255, 255, 255, 0.05)',
      border: `1px solid ${colorStyle}40`,
      borderRadius: '12px',
      padding: '20px',
      marginBottom: '25px'
    }}>
      <h3 style={{ 
        color: colorStyle, 
        marginTop: 0, 
        marginBottom: '15px', 
        fontSize: '1.1rem' 
      }}>
        ‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      </h3>
      
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
        gap: '10px'
      }}>
        
        {/* –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è */}
        <button
          onClick={() => {
            const playerId = prompt('üÜî ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ë–ê–ó–û–í–û–ô –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
            if (playerId?.trim()) {
              onBasicVerification(playerId.trim());
            }
          }}
          style={{
            padding: '12px',
            background: 'linear-gradient(135deg, #4CAF50, #45a049)',
            border: 'none',
            borderRadius: '8px',
            color: '#fff',
            cursor: 'pointer',
            fontSize: '0.8rem',
            fontWeight: 'bold',
            transition: 'all 0.3s ease'
          }}
          onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.02)'}
          onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
        >
          ‚úÖ –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
        </button>
        
        {/* –ü—Ä–µ–º–∏—É–º 30 –¥–Ω–µ–π */}
        <button
          onClick={() => {
            const playerId = prompt('üÜî ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ü–†–ï–ú–ò–£–ú 30 –¥–Ω–µ–π:');
            if (playerId?.trim()) {
              onPremium30Days(playerId.trim());
            }
          }}
          style={{
            padding: '12px',
            background: 'linear-gradient(135deg, #FF6B35, #e55a2b)',
            border: 'none',
            borderRadius: '8px',
            color: '#fff',
            cursor: 'pointer',
            fontSize: '0.8rem',
            fontWeight: 'bold',
            transition: 'all 0.3s ease'
          }}
          onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.02)'}
          onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
        >
          üëë –ü—Ä–µ–º–∏—É–º 30 –¥–Ω–µ–π
        </button>
        
        {/* –ü—Ä–µ–º–∏—É–º –Ω–∞–≤—Å–µ–≥–¥–∞ */}
        <button
          onClick={() => {
            const playerId = prompt('üÜî ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ü–†–ï–ú–ò–£–ú –Ω–∞–≤—Å–µ–≥–¥–∞:');
            if (playerId?.trim()) {
              onPremiumForever(playerId.trim());
            }
          }}
          style={{
            padding: '12px',
            background: 'linear-gradient(135deg, #FFD700, #ddb800)',
            border: 'none',
            borderRadius: '8px',
            color: '#000',
            cursor: 'pointer',
            fontSize: '0.8rem',
            fontWeight: 'bold',
            transition: 'all 0.3s ease'
          }}
          onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.02)'}
          onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
        >
          üèÜ –ü—Ä–µ–º–∏—É–º –Ω–∞–≤—Å–µ–≥–¥–∞
        </button>
        
        {/* –û—Ç–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ */}
        <button
          onClick={() => {
            const playerId = prompt('üÜî ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è –û–¢–ú–ï–ù–´ —Å—Ç–∞—Ç—É—Å–æ–≤:');
            if (playerId?.trim() && confirm(`‚ö†Ô∏è –û—Ç–º–µ–Ω–∏—Ç—å –í–°–ï —Å—Ç–∞—Ç—É—Å—ã —É –∏–≥—Ä–æ–∫–∞ ${playerId}?\n\n‚Ä¢ –£–±—Ä–∞—Ç—å verified\n‚Ä¢ –£–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏`)) {
              onRevokeAll(playerId.trim());
            }
          }}
          style={{
            padding: '12px',
            background: 'linear-gradient(135deg, #e74c3c, #c0392b)',
            border: 'none',
            borderRadius: '8px',
            color: '#fff',
            cursor: 'pointer',
            fontSize: '0.8rem',
            fontWeight: 'bold',
            transition: 'all 0.3s ease'
          }}
          onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.02)'}
          onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
        >
          ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã
        </button>
        
        {/* –ë—ã—Å—Ç—Ä—ã–µ –±–∞–ª–∞–Ω—Å—ã */}
        <button
          onClick={() => {
            const playerId = prompt('üÜî ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è +1000 CS:');
            if (playerId?.trim()) {
              onUpdateBalance(playerId.trim(), 'cs', 'add', 1000);
            }
          }}
          style={{
            padding: '12px',
            background: 'linear-gradient(135deg, #FFD700, #FFA500)',
            border: 'none',
            borderRadius: '8px',
            color: '#000',
            cursor: 'pointer',
            fontSize: '0.8rem',
            fontWeight: 'bold',
            transition: 'all 0.3s ease'
          }}
          onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.02)'}
          onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
        >
          üí∞ +1000 CS
        </button>
        
        <button
          onClick={() => {
            const playerId = prompt('üÜî ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è +5 TON:');
            if (playerId?.trim()) {
              onUpdateBalance(playerId.trim(), 'ton', 'add', 5);
            }
          }}
          style={{
            padding: '12px',
            background: 'linear-gradient(135deg, #0088cc, #004466)',
            border: 'none',
            borderRadius: '8px',
            color: '#fff',
            cursor: 'pointer',
            fontSize: '0.8rem',
            fontWeight: 'bold',
            transition: 'all 0.3s ease'
          }}
          onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.02)'}
          onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
        >
          üíé +5 TON
        </button>
      </div>
      
      <div style={{
        marginTop: '15px',
        padding: '10px',
        background: `${colorStyle}10`,
        borderRadius: '8px',
        fontSize: '0.8rem',
        color: '#aaa'
      }}>
        üí° <strong>–°–æ–≤–µ—Ç:</strong> –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–∏–∂–µ
      </div>
    </div>
  );
};

export default PlayerActionsPanel;