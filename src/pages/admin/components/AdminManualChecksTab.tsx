// pages/admin/components/AdminManualChecksTab.tsx - –ú–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä—É—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
import React, { useState, useEffect } from 'react';
import { adminApiService } from '../services/adminApi';

interface AdminManualChecksTabProps {
  colorStyle: string;
}

interface ManualSubmission {
  id: number;
  telegram_id: string;
  quest_key: string;
  broker_name?: string;
  submission_data: {
    account_number: string;
    notes?: string;
  };
  status: 'pending' | 'approved' | 'rejected';
  created_at: string;
  reviewed_by?: string;
  reviewed_at?: string;
  review_notes?: string;
  first_name?: string;
  last_name?: string;
  username?: string;
  quest_name?: string;
  reward_cs?: number;
}

interface GroupedSubmissions {
  quest_key: string;
  quest_name: string;
  broker_name?: string;
  quest_type?: string;
  reward_cs?: number;
  submissions: ManualSubmission[];
}

interface SubmissionsResponse {
  success: boolean;
  submissions: ManualSubmission[];
  grouped_by_quest: GroupedSubmissions[];
  stats: {
    total: number;
    pending: number;
    approved: number;
    rejected: number;
  };
}

const AdminManualChecksTab: React.FC<AdminManualChecksTabProps> = ({ colorStyle }) => {
  const [submissions, setSubmissions] = useState<GroupedSubmissions[]>([]);
  const [stats, setStats] = useState({ total: 0, pending: 0, approved: 0, rejected: 0 });
  const [loading, setLoading] = useState(false);
  const [filter, setFilter] = useState<'all' | 'pending' | 'approved' | 'rejected'>('all');
  const [actionLoading, setActionLoading] = useState<{[key: number]: boolean}>({});
  const [message, setMessage] = useState<{ text: string; type: 'success' | 'error' | 'info' } | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫
  const loadSubmissions = async () => {
    setLoading(true);
    try {
      const response: SubmissionsResponse = await adminApiService.getManualChecks(filter);
      setSubmissions(response.grouped_by_quest || []);
      setStats(response.stats || { total: 0, pending: 0, approved: 0, rejected: 0 });
      if (process.env.NODE_ENV === 'development') console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞—è–≤–æ–∫:', response.stats);
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', error);
      showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞—è–≤–∫–∏: ' + error.message, 'error');
    } finally {
      setLoading(false);
    }
  };

  // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
  const showMessage = (text: string, type: 'success' | 'error' | 'info') => {
    setMessage({ text, type });
    setTimeout(() => setMessage(null), 5000);
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ —Å–º–µ–Ω–µ —Ñ–∏–ª—å—Ç—Ä–∞
  useEffect(() => {
    loadSubmissions();
  }, [filter]);

  // –û–¥–æ–±—Ä–∏—Ç—å/–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É
  const handleReview = async (submissionId: number, action: 'approve' | 'reject', notes?: string) => {
    setActionLoading(prev => ({ ...prev, [submissionId]: true }));

    try {
      await adminApiService.reviewManualCheck(submissionId, action, notes);
      showMessage(
        `–ó–∞—è–≤–∫–∞ ${action === 'approve' ? '–æ–¥–æ–±—Ä–µ–Ω–∞' : '–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞'} —É—Å–ø–µ—à–Ω–æ!`,
        'success'
      );
      await loadSubmissions(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏:', error);
      showMessage('–û—à–∏–±–∫–∞: ' + error.message, 'error');
    } finally {
      setActionLoading(prev => ({ ...prev, [submissionId]: false }));
    }
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <div>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        textAlign: 'center',
        marginBottom: '30px',
        padding: '20px',
        background: 'rgba(255, 255, 255, 0.05)',
        borderRadius: '15px',
        border: `1px solid ${colorStyle}40`
      }}>
        <h2 style={{
          fontSize: '2rem',
          color: colorStyle,
          margin: '0 0 10px 0',
          textShadow: `0 0 10px ${colorStyle}80`
        }}>
          üìã –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏–π
        </h2>
        <p style={{ color: '#aaa', margin: 0, fontSize: '0.95rem' }}>
          –ó–∞—è–≤–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
        </p>
      </div>

      {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
      {message && (
        <div style={{
          padding: '15px 20px',
          background: message.type === 'success' ? 'rgba(0, 255, 0, 0.1)'
                    : message.type === 'error' ? 'rgba(255, 0, 0, 0.1)'
                    : 'rgba(100, 200, 255, 0.1)',
          border: `2px solid ${
            message.type === 'success' ? '#0f0'
            : message.type === 'error' ? '#f00'
            : '#6cf'
          }`,
          borderRadius: '10px',
          marginBottom: '20px',
          color: '#fff',
          fontSize: '1rem'
        }}>
          {message.text}
        </div>
      )}

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
        gap: '15px',
        marginBottom: '25px'
      }}>
        {[
          { label: '–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫', value: stats.total, color: '#6cf' },
          { label: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ', value: stats.pending, color: '#fc0' },
          { label: '–û–¥–æ–±—Ä–µ–Ω–æ', value: stats.approved, color: '#0f0' },
          { label: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ', value: stats.rejected, color: '#f66' }
        ].map((stat, idx) => (
          <div key={idx} style={{
            padding: '20px',
            background: 'rgba(255, 255, 255, 0.05)',
            borderRadius: '12px',
            border: `2px solid ${stat.color}40`,
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '2rem', color: stat.color, fontWeight: 'bold', marginBottom: '5px' }}>
              {stat.value}
            </div>
            <div style={{ fontSize: '0.9rem', color: '#aaa' }}>
              {stat.label}
            </div>
          </div>
        ))}
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div style={{
        display: 'flex',
        gap: '12px',
        marginBottom: '25px',
        justifyContent: 'center',
        flexWrap: 'wrap'
      }}>
        {[
          { key: 'all' as const, label: '–í—Å–µ', icon: 'üìã' },
          { key: 'pending' as const, label: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ', icon: '‚è≥' },
          { key: 'approved' as const, label: '–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ', icon: '‚úÖ' },
          { key: 'rejected' as const, label: '–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ', icon: '‚ùå' }
        ].map(btn => (
          <button
            key={btn.key}
            onClick={() => setFilter(btn.key)}
            style={{
              padding: '10px 20px',
              background: filter === btn.key
                ? `linear-gradient(135deg, ${colorStyle}, ${colorStyle}88)`
                : 'rgba(255, 255, 255, 0.1)',
              border: `2px solid ${filter === btn.key ? colorStyle : 'transparent'}`,
              borderRadius: '10px',
              color: '#fff',
              cursor: 'pointer',
              fontSize: '0.95rem',
              transition: 'all 0.3s ease'
            }}
          >
            {btn.icon} {btn.label}
          </button>
        ))}
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –±—Ä–æ–∫–µ—Ä–∞–º */}
      {loading ? (
        <div style={{ textAlign: 'center', padding: '40px', color: '#aaa', fontSize: '1.2rem' }}>
          <div style={{ animation: 'spin 1s linear infinite', display: 'inline-block' }}>‚è≥</div>
          <div style={{ marginTop: '10px' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</div>
        </div>
      ) : submissions.length === 0 ? (
        <div style={{
          textAlign: 'center',
          padding: '40px',
          background: 'rgba(255, 255, 255, 0.05)',
          borderRadius: '12px',
          color: '#aaa',
          fontSize: '1.1rem'
        }}>
          üì≠ –ù–µ—Ç –∑–∞—è–≤–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        </div>
      ) : (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '25px' }}>
          {/* –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ broker_name */}
          {Object.entries(
            submissions.reduce((acc, group) => {
              const brokerKey = group.broker_name || 'Unknown';
              if (!acc[brokerKey]) {
                acc[brokerKey] = [];
              }
              acc[brokerKey].push(group);
              return acc;
            }, {} as Record<string, GroupedSubmissions[]>)
          ).map(([brokerName, brokerGroups]) => (
            <div key={brokerName} style={{
              background: 'rgba(255, 255, 255, 0.03)',
              borderRadius: '20px',
              border: `2px solid ${colorStyle}60`,
              overflow: 'hidden',
              padding: '20px'
            }}>
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±—Ä–æ–∫–µ—Ä–∞ */}
              <h2 style={{
                margin: '0 0 20px 0',
                color: colorStyle,
                fontSize: '1.8rem',
                textShadow: `0 0 15px ${colorStyle}80`,
                textAlign: 'center',
                paddingBottom: '15px',
                borderBottom: `2px solid ${colorStyle}40`
              }}>
                üè¶ {brokerName}
              </h2>

              {/* –ö–≤–µ—Å—Ç—ã —ç—Ç–æ–≥–æ –±—Ä–æ–∫–µ—Ä–∞ */}
              <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>
                {brokerGroups.map(group => (
            <div key={group.quest_key} style={{
              background: 'rgba(255, 255, 255, 0.05)',
              borderRadius: '15px',
              border: `1px solid ${colorStyle}40`,
              overflow: 'hidden'
            }}>
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞–Ω–∏—è */}
              <div style={{
                padding: '20px',
                background: `linear-gradient(135deg, ${colorStyle}20, transparent)`,
                borderBottom: `1px solid ${colorStyle}40`
              }}>
                <h3 style={{
                  margin: '0 0 5px 0',
                  color: colorStyle,
                  fontSize: '1.3rem',
                  textShadow: `0 0 10px ${colorStyle}60`
                }}>
                  üè¶ {group.broker_name || group.quest_name || group.quest_key}
                </h3>
                <div style={{ color: '#aaa', fontSize: '0.9rem' }}>
                  {group.reward_cs && `üí∞ –ù–∞–≥—Ä–∞–¥–∞: ${group.reward_cs} CS ‚Ä¢ `}
                  –ó–∞—è–≤–æ–∫: {group.submissions.length}
                </div>
              </div>

              {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ */}
              <div style={{ padding: '15px' }}>
                {group.submissions.map(submission => (
                  <div key={submission.id} style={{
                    padding: '15px',
                    background: 'rgba(255, 255, 255, 0.03)',
                    borderRadius: '10px',
                    border: `1px solid ${
                      submission.status === 'pending' ? '#fc0'
                      : submission.status === 'approved' ? '#0f0'
                      : '#f66'
                    }40`,
                    marginBottom: '12px'
                  }}>
                    <div style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'flex-start',
                      marginBottom: '12px',
                      flexWrap: 'wrap',
                      gap: '10px'
                    }}>
                      {/* –ò–Ω—Ñ–æ –∏–≥—Ä–æ–∫–∞ */}
                      <div>
                        <div style={{ fontSize: '1.05rem', color: '#fff', marginBottom: '5px' }}>
                          üë§ {submission.first_name || 'Unknown'} {submission.last_name || ''}
                          {submission.username && (
                            <span style={{ color: '#6cf', marginLeft: '8px' }}>
                              @{submission.username}
                            </span>
                          )}
                        </div>
                        <div style={{ fontSize: '0.85rem', color: '#aaa' }}>
                          ID: {submission.telegram_id} ‚Ä¢ {formatDate(submission.created_at)}
                        </div>
                      </div>

                      {/* –°—Ç–∞—Ç—É—Å */}
                      <div style={{
                        padding: '6px 12px',
                        background: submission.status === 'pending' ? 'rgba(255, 200, 0, 0.2)'
                                  : submission.status === 'approved' ? 'rgba(0, 255, 0, 0.2)'
                                  : 'rgba(255, 100, 100, 0.2)',
                        border: `1px solid ${
                          submission.status === 'pending' ? '#fc0'
                          : submission.status === 'approved' ? '#0f0'
                          : '#f66'
                        }`,
                        borderRadius: '8px',
                        fontSize: '0.85rem',
                        fontWeight: 'bold',
                        color: submission.status === 'pending' ? '#fc0'
                              : submission.status === 'approved' ? '#0f0'
                              : '#f66'
                      }}>
                        {submission.status === 'pending' ? '‚è≥ –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ'
                        : submission.status === 'approved' ? '‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ'
                        : '‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ'}
                      </div>
                    </div>

                    {/* –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ */}
                    <div style={{
                      padding: '12px',
                      background: 'rgba(255, 255, 255, 0.05)',
                      borderRadius: '8px',
                      marginBottom: '12px'
                    }}>
                      <div style={{ color: '#fff', marginBottom: '6px' }}>
                        üî¢ <strong>–ù–æ–º–µ—Ä —Å—á—ë—Ç–∞:</strong> {submission.submission_data.account_number}
                      </div>
                      {submission.submission_data.notes && (
                        <div style={{ color: '#aaa', fontSize: '0.9rem' }}>
                          üìù <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> {submission.submission_data.notes}
                        </div>
                      )}
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è pending) */}
                    {submission.status === 'pending' && (
                      <div style={{
                        display: 'flex',
                        gap: '10px',
                        flexWrap: 'wrap'
                      }}>
                        <button
                          onClick={() => handleReview(submission.id, 'approve')}
                          disabled={actionLoading[submission.id]}
                          style={{
                            flex: 1,
                            minWidth: '150px',
                            padding: '12px 20px',
                            background: actionLoading[submission.id]
                              ? 'rgba(100, 100, 100, 0.3)'
                              : 'linear-gradient(135deg, #0f0, #0c0)',
                            border: '2px solid #0f0',
                            borderRadius: '10px',
                            color: '#fff',
                            fontSize: '1rem',
                            fontWeight: 'bold',
                            cursor: actionLoading[submission.id] ? 'not-allowed' : 'pointer',
                            transition: 'all 0.3s ease',
                            opacity: actionLoading[submission.id] ? 0.6 : 1
                          }}
                        >
                          {actionLoading[submission.id] ? '‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...' : '‚úÖ –û–¥–æ–±—Ä–∏—Ç—å'}
                        </button>

                        <button
                          onClick={() => {
                            const notes = prompt('–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):');
                            if (notes !== null) { // null –µ—Å–ª–∏ Cancel
                              handleReview(submission.id, 'reject', notes || undefined);
                            }
                          }}
                          disabled={actionLoading[submission.id]}
                          style={{
                            flex: 1,
                            minWidth: '150px',
                            padding: '12px 20px',
                            background: actionLoading[submission.id]
                              ? 'rgba(100, 100, 100, 0.3)'
                              : 'linear-gradient(135deg, #f66, #c33)',
                            border: '2px solid #f66',
                            borderRadius: '10px',
                            color: '#fff',
                            fontSize: '1rem',
                            fontWeight: 'bold',
                            cursor: actionLoading[submission.id] ? 'not-allowed' : 'pointer',
                            transition: 'all 0.3s ease',
                            opacity: actionLoading[submission.id] ? 0.6 : 1
                          }}
                        >
                          {actionLoading[submission.id] ? '‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...' : '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å'}
                        </button>
                      </div>
                    )}

                    {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ */}
                    {submission.status !== 'pending' && (
                      <div style={{
                        padding: '10px',
                        background: 'rgba(255, 255, 255, 0.05)',
                        borderRadius: '8px',
                        fontSize: '0.9rem',
                        color: '#aaa'
                      }}>
                        <div>
                          {submission.status === 'approved' ? '‚úÖ' : '‚ùå'} –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ{' '}
                          {submission.reviewed_at && formatDate(submission.reviewed_at)}
                        </div>
                        {submission.review_notes && (
                          <div style={{ marginTop: '5px', color: '#fff' }}>
                            üí¨ {submission.review_notes}
                          </div>
                        )}
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          ))}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default AdminManualChecksTab;
