// services/premiumAwareAdService.ts - –ó–ê–ú–ï–ù–ò–¢–¨ –í–ï–°–¨ –§–ê–ô–õ

import { adService, AdsgramResult } from './adsgramService';
import axios from 'axios';

const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';

interface PremiumStatus {
  hasPremium: boolean;
  type?: 'forever' | 'temporary';
  daysLeft?: number;
  reason: string;
}

interface PremiumAdResult extends AdsgramResult {
  premium?: PremiumStatus;
  skipped?: boolean;
}

class PremiumAwareAdService {
  private telegramId: string | null = null;
  private lastPremiumCheck: number = 0;
  private premiumCache: PremiumStatus = { hasPremium: false, reason: 'Not initialized' };
  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –∫–µ—à

  constructor() {
    console.log('üëë PremiumAwareAdService initialized');
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID –∏–≥—Ä–æ–∫–∞
  setTelegramId(telegramId: string) {
    if (this.telegramId !== telegramId) {
      this.telegramId = telegramId;
      this.premiumCache = { hasPremium: false, reason: 'Player changed' }; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–µ—à –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log(`üëë Telegram ID set to: ${telegramId}`);
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  private async checkPremiumStatus(force: boolean = false): Promise<PremiumStatus> {
    if (!this.telegramId) {
      return { hasPremium: false, reason: 'No telegram ID provided' };
    }

    const now = Date.now();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à –µ—Å–ª–∏ –æ–Ω —Å–≤–µ–∂–∏–π –∏ –Ω–µ —Ñ–æ—Ä—Å–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (!force && (now - this.lastPremiumCheck) < this.CACHE_DURATION) {
      console.log('üëë Using cached premium status:', this.premiumCache);
      return this.premiumCache;
    }

    try {
      console.log(`üëë Checking premium status for ${this.telegramId}...`);
      
      const response = await axios.get(`${API_URL}/api/adsgram/check-ad-block/${this.telegramId}`);
      
      if (response.data.success) {
        const premiumData: PremiumStatus = response.data.premium || { hasPremium: false, reason: 'No premium data received' };
        this.premiumCache = premiumData;
        this.lastPremiumCheck = now;
        
        console.log(`üëë Premium status updated:`, premiumData);
        return premiumData;
      } else {
        throw new Error(response.data.error || 'Failed to check premium status');
      }
      
    } catch (err: any) {
      console.error('üëë Error checking premium status:', err.message);
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      const fallbackStatus: PremiumStatus = { 
        hasPremium: false, 
        reason: 'Error checking premium status' 
      };
      
      this.premiumCache = fallbackStatus;
      this.lastPremiumCheck = now;
      
      return fallbackStatus;
    }
  }

  // –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–µ–º–∏—É–º–∞
  async showRewardedAd(forceCheck: boolean = false): Promise<PremiumAdResult> {
    console.log('üëë Attempting to show rewarded ad...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å
    const premiumStatus = await this.checkPremiumStatus(forceCheck);
    
    if (premiumStatus.hasPremium) {
      console.log('üëë User has premium - skipping ad');
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã
      return {
        success: true,
        provider: 'premium_skip',
        reward: 'premium_bonus',
        premium: premiumStatus,
        skipped: true,
        timestamp: Date.now()
      };
    }

    console.log('üëë User does not have premium - showing ad');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–ª–∞–º—É –∫–∞–∫ –æ–±—ã—á–Ω–æ
    const adResult = await adService.showRewardedAd();
    
    return {
      ...adResult,
      premium: premiumStatus,
      skipped: false
    };
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
  async isAvailable(): Promise<boolean> {
    // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–º–∏—É–º, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å "–¥–æ—Å—Ç—É–ø–µ–Ω"
    const premiumStatus = await this.checkPremiumStatus();
    
    if (premiumStatus.hasPremium) {
      console.log('üëë Ad service available (premium user - auto reward)');
      return true;
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    const isAdServiceAvailable = adService.isAvailable();
    console.log(`üëë Ad service available (regular user): ${isAdServiceAvailable}`);
    
    return isAdServiceAvailable;
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º –ø—Ä–µ–º–∏—É–º–∞
  async initialize(blockId?: string): Promise<void> {
    console.log('üëë Initializing premium-aware ad service...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –∞–¥–Ω—ã–π —Å–µ—Ä–≤–∏—Å
    await adService.initialize(blockId);
    
    console.log('üëë Premium-aware ad service initialized');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ —Å —É—á–µ—Ç–æ–º –ø—Ä–µ–º–∏—É–º–∞
  async getProviderInfo() {
    const premiumStatus = await this.checkPremiumStatus();
    
    if (premiumStatus.hasPremium) {
      return {
        name: 'premium',
        type: premiumStatus.type,
        daysLeft: premiumStatus.daysLeft,
        available: true,
        description: 'Premium user - ads disabled'
      };
    }
    
    return adService.getProviderInfo();
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –∫–µ—à–∞
  async refreshPremiumStatus(): Promise<PremiumStatus> {
    console.log('üëë Force refreshing premium status...');
    return await this.checkPremiumStatus(true);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
  getCurrentPremiumStatus(): PremiumStatus {
    return this.premiumCache;
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const premiumAdService = new PremiumAwareAdService();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã
export type { PremiumStatus, PremiumAdResult };